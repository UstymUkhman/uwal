var G=(s,t,h)=>{if(!t.has(s))throw TypeError("Cannot "+h)};var r=(s,t,h)=>(G(s,t,"read from private field"),h?h.call(s):t.get(s)),g=(s,t,h)=>{if(t.has(s))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(s):t.set(s,h)},i=(s,t,h,o)=>(G(s,t,"write to private field"),o?o.call(s,h):t.set(s,h),h);var f,c,n,e;class B{constructor(t=0){g(this,f,1);g(this,c,1);g(this,n,1);g(this,e,1);this.Value=t}set rgb(t){i(this,f,t[0]),i(this,c,t[1]),i(this,n,t[2]),i(this,e,t[3]??1)}get rgb(){return[r(this,f),r(this,c),r(this,n)]}set rgba(t){this.rgb=t}get rgba(){return this.rgb.concat(r(this,e))}set RGB(t){i(this,f,t[0]/255),i(this,c,t[1]/255),i(this,n,t[2]/255),i(this,e,(t[3]??255)/255)}get RGB(){return[r(this,f)*255,r(this,c)*255,r(this,n)*255]}set RGBA(t){this.RGB=t}get RGBA(){return this.RGB.concat(r(this,e)*255)}set Value(t){t>16777215?i(this,e,(t&255)/255):(t=t<<8|t>>>24,t>>>=0,i(this,e,1)),i(this,f,(t>>24&255)/255),i(this,c,(t>>16&255)/255),i(this,n,(t>>8&255)/255)}}f=new WeakMap,c=new WeakMap,n=new WeakMap,e=new WeakMap;var R="const QUAD=array(vec2f(-1.0,-1.0),vec2f(1.0,-1.0),vec2f(1.0,1.0),vec2f(1.0,1.0),vec2f(-1.0,1.0),vec2f(-1.0,-1.0));fn GetQuadCoord(index: u32)->vec2f{return QUAD[index];}";export{B as C,R as Q};
