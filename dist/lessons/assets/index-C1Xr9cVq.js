import{m as s,v as p,G as S,C as M,a as b,b as I,c as P,T as A,E as T,M as D,D as G}from"./index-C0a-XX81.js";import{S as O,a as w}from"./Scene-B1vfVUnR.js";class R{Children=[];Label;#e=null;TransformationOrder="TRS";ProjectionMatrix=s.identity();#t=s.identity();#r=s.identity();#i=p.create();#s=p.set(1,1);#n=0;constructor(t,e=null){this.Label=t,this.Parent=e}Add(t){t=S(t),t.forEach(e=>e.Parent=this)}Remove(t){t=S(t),t.forEach(e=>e.Parent=null)}Find(t){let e=null;return this.Traverse(r=>{if(r.Label===t)return e=r}),e}Traverse(t){if(!t(this))for(let e=0,r=this.Children.length;e<r;++e)this.Children[e].Traverse(t)}ResetLocalMatrix(){this.#t=s.identity()}UpdateWorldMatrix(){this.UpdateLocalMatrix(),this.#e?s.multiply(this.#e.WorldMatrix,this.#t,this.#r):s.copy(this.#t,this.#r),this.Children.forEach(t=>t.UpdateWorldMatrix())}UpdateLocalMatrix(){this.#t=s.identity();const t=this.TransformationOrder.split("");for(let e=0,r=t.length;e<r;e++)switch(t[e]){case"T":s.translate(this.#t,this.#i,this.#t);break;case"R":s.rotate(this.#t,this.#n,this.#t);break;case"S":s.scale(this.#t,this.#s,this.#t);break}}UpdateProjectionMatrix(t){const e=this.#e&&this.#r||this.#t;return s.multiply(t,e,this.ProjectionMatrix)}ResetProjectionMatrix(){this.ProjectionMatrix=s.identity()}Rotate(t){s.rotate(this.#t,t,this.#t)}Scale(t){s.scale(this.#t,t,this.#t)}set Transform(t){this.#t=s.identity();const[e,r,i]=t,n=this.TransformationOrder.split("");for(let h=0,c=n.length;h<c;h++)switch(n[h]){case"T":e&&(this.Position=e);break;case"R":r!==void 0&&(this.Rotation=r);break;case"S":i&&(this.Scaling=i);break}}set Position(t){p.copy(t,this.#i),s.translate(this.#t,t,this.#t)}get Position(){return this.#i}set Rotation(t){this.#n=t,s.rotate(this.#t,t,this.#t)}get Rotation(){return this.#n}set Scaling(t){p.copy(t,this.#s),s.scale(this.#t,t,this.#t)}get Scaling(){return this.#s}get LocalMatrix(){return this.#t}get WorldMatrix(){return this.#r}set Parent(t){if(this.#e){const e=this.#e.Children.indexOf(this);0<=e&&this.#e.Children.splice(e,1)}t&&t.Children.push(this),this.#e=t}get Parent(){return this.#e}}let U=class{#e;#t;#r;#i=crypto.randomUUID();#s;#n;#a=new M(0,0);constructor(t=16777215,e="Shape"){this.Color=t,this.#e=e}CreateColorBuffer(t,e=this.#e){const{color:r,buffer:i}=t.CreateUniformBuffer("color",{label:`${e} Color Buffer`});this.#t=r,this.#r=t,this.#n=i,this.#t.set(this.#s),t.WriteBuffer(i,r)}SetBlendConstant(t){if(!t?.BlendConstant||!this.#a.Equals(t.BlendConstant))return this.#r.BlendConstant=this.#a}set BlendConstant(t){typeof t=="number"&&this.#a.Set(t)||(this.#a.rgba=b(t))}get BlendConstant(){return this.#a}get ColorBuffer(){return this.#n}set Color(t){this.#s=typeof t=="number"&&I(t)||b(t),this.#t?.fill(1).set(this.#s),this.#r?.WriteBuffer(this.#n,this.#t)}get Color(){return this.#s}get ID(){return this.#i}Destroy(){this.#r=void 0,this.#n?.destroy(),this.#n=void 0}},L=class extends R{#e;Visible=!0;#t;#r;#i;#s=p.set(0,0);#n=p.set(0,0);#a=P({min:p.create(),max:p.create()});#o=[];constructor(t,e,r="Shape",i=null){super(r,i),this.#e=t,this.#r=e===void 0&&new U||e}SetRenderPipeline(t,e){this.#t=t,this.#e.CreateBuffers(t),this.#r?.CreateColorBuffer(t),this.#h(e)}#h(t,e){const{projection:r,buffer:i}=this.#t.CreateUniformBuffer("projection",{label:`${this.Label} Projection Buffer`,...e});this.ProjectionMatrix=s.identity(r),this.#i=i,t=S(t),this.#o=this.#t.SetBindGroupFromResources([i,this.#r?.ColorBuffer,...t].filter(Boolean),0,0,`${this.Label} Bind Group`)}UpdateProjectionMatrix(t){const e=super.UpdateProjectionMatrix(t);this.#t.WriteBuffer(this.#i,e)}UpdateLocalMatrix(){super.UpdateLocalMatrix();const t=this.LocalMatrix,{Radius:e}=this.#e;this.#a.min[0]=t[8]-e,this.#a.min[1]=t[9]-e,this.#a.max[0]=t[8]+e,this.#a.max[1]=t[9]+e,s.translate(t,this.#s,t),this.#n[0]=this.#s[0]+this.#a.max[0],this.#n[1]=this.#s[1]+this.#a.max[1]}SetBindGroups(){!this.#t&&A(T.PIPELINE_NOT_FOUND,"RenderPipeline.\n            Call `Shape.SetRenderPipeline` method before setting its data."),this.#t.BindGroups=this.#o}get ProjectionBuffer(){return this.#i}set Origin(t){this.#s[0]=-t[0],this.#s[1]=-t[1];const e=this.LocalMatrix;s.translate(e,t,e)}get Origin(){return this.#s}get Center(){return this.#n}get BoundingBox(){return this.#a}get Geometry(){return this.#e}get Material(){return this.#r}get Pipeline(){return this.#t}Destroy(){this.#e.Destroy(),this.#r?.Destroy(),this.#t=void 0,this.#o.splice(0),this.#i?.destroy(),this.#i=void 0}};const V=P({TRIANGLE:3,SQUARE:4,PENTAGON:5,HEXAGON:6,HEPTAGON:7,OCTAGON:8,NONAGON:9,DECAGON:10,DODECAGON:12});class v{#e;#t;#r;IndexFormat;#i;#s=crypto.randomUUID();#n;#a;VertexBuffers;IndexBuffer;constructor(t={segments:"SQUARE",radius:0}){const e=t.segments,r=typeof e=="number"&&e;this.#e=t.radius??0,this.#r=r||V[e||"SQUARE"],this.#i={label:"Shape",...t},this.IndexFormat=t.indexFormat??"uint16"}GetPositionBufferLayout(t,e="position",r="vertex",i="vertex"){return t.CreateVertexBufferLayout(e,r,i)}#o(t,e=this.#i.label){let r=this.#a;if(!r){r=new Float32Array((this.#r+1)*2*3);const{endAngle:n=D.TAU,startAngle:h=0,innerRadius:c=0}=this.#i,l=n-h;for(let d=0,m=0,f=this.#r;m<=f;++m){const B=h+m*l/f,u=Math.cos(B),g=Math.sin(B);r[d++]=u*this.#e,r[d++]=g*this.#e,r[d++]=u*c,r[d++]=g*c}}const i=t.CreateVertexBuffer(r,{label:`${e} Vertex Buffer`});this.VertexBuffers=t.SetVertexBuffers(i),t.WriteBuffer(i,r)}#h(t,e=this.#i.label){let r=this.#n;if(!r){r=new Uint16Array(this.#r*6);for(let n=0,h=0,c=this.#r;h<c;++h){const l=h*2;r[n++]=l+1,r[n++]=l+3,r[n++]=l+2,r[n++]=l+2,r[n++]=l+0,r[n++]=l+1}}const i=t.CreateIndexBuffer(r,{label:`${e} Index Buffer`});this.IndexBuffer=t.SetIndexBuffer(i,this.IndexFormat),t.SetDrawParams(this.#t=r.length),t.WriteBuffer(i,r)}CreateBuffers(t,e=this.#i.label){this.#o(t,e),this.#h(t,e)}set VertexData(t){this.#a=t}set IndexData(t){this.#n=t}get Vertices(){return this.#t}get Radius(){return this.#e}get ID(){return this.#s}Destroy(){this.IndexBuffer?.buffer.destroy(),this.IndexBuffer=void 0,this.#a=void 0,this.#n=void 0,this.VertexBuffers&&(this.VertexBuffers[0]?.buffer.destroy(),this.VertexBuffers.splice(0),this.VertexBuffers=void 0)}}class E extends R{#e=0;#t=innerWidth;#r=innerHeight;#i=0;#s=new Float32Array(4);constructor(t=innerWidth,e=innerHeight){super("Camera2D"),this.Size=typeof t!="number"&&this.rendererRight.CanvasSize||[t,e]}#n(t=!1){}UpdateProjectionMatrix(){const t=this.#e,e=this.#t,r=this.#r,i=this.#i;return s.set(2/e,0,0,0,-2/r,0,i/e*2-1,t/r*-2+1,1,this.ProjectionMatrix),this.#n(),this.ProjectionMatrix}set Size([t,e]){this.#t=t,this.#r=e,this.UpdateProjectionMatrix()}set Top(t){this.#e=t,this.UpdateProjectionMatrix()}get Top(){return this.#e}set Right(t){this.#t=t,this.UpdateProjectionMatrix()}get Right(){return this.#t}set Bottom(t){this.#r=t,this.UpdateProjectionMatrix()}get Bottom(){return this.#r}set Left(t){this.#i=t,this.UpdateProjectionMatrix()}get Left(){return this.#i}get Frustum(){return this.#s}}function N(){const o=new Float32Array([0,0,30,0,0,150,30,150,30,0,100,0,30,30,100,30,30,60,70,60,30,90,70,90]),t=new Uint32Array([0,1,2,2,1,3,4,5,6,6,5,7,8,9,10,10,9,11]);return{vertexData:o,indexData:t}}/**
 * @module Matrix Math
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This lesson is reproduced from WebGPU Matrix Math
 * {@link https://webgpufundamentals.org/webgpu/lessons/webgpu-matrix-math.html}&nbsp;
 * and developed by using a version listed below. Please note that this code
 * may be simplified in future thanks to more recent library APIs.
 * @version 0.2.0
 * @license MIT
 */(async function(o){let t;o.style.backgroundPosition="-1.5px -1.5px, -1.5px -1.5px, -1px -1px, -1px -1px",o.style.backgroundSize="100px 100px, 100px 100px, 10px 10px, 10px 10px",o.style.backgroundColor="#000",o.style.backgroundImage=`
        linear-gradient(       #666 1.5px, transparent 1.5px),
        linear-gradient(90deg, #666 1.5px, transparent 1.5px),
        linear-gradient(       #333 1px,   transparent 1px),
        linear-gradient(90deg, #333 1px,   transparent 1px)
    `;try{t=new(await G.Renderer(o,"Matrix Math",{alphaMode:"premultiplied"}))}catch(a){alert(a)}const e=new O,r=new E,i=new GUI().onChange(g),n=new t.Pipeline,{vertexData:h,indexData:c}=N(),l=n.CreateShaderModule(w),d=new v({radius:75,indexFormat:"uint32"}),m={min:-360,max:360,step:1,converters:GUI.converters.radToDeg},f={translation:[150,100],rotation:D.DegreesToRadians(30),scale:[1,1],objects:1};i.add(f.translation,"0",0,1e3).name("translation.x"),i.add(f.translation,"1",0,1e3).name("translation.y"),i.add(f,"rotation",m),i.add(f.scale,"0",-5,5).name("scale.x"),i.add(f.scale,"1",-5,5).name("scale.y"),i.add(f,"objects",1,5,1).name("objects"),await t.AddPipeline(n,{fragment:n.CreateFragmentState(l),vertex:n.CreateVertexState(l,d.GetPositionBufferLayout(n))});const B=new M;d.IndexData=c,d.VertexData=h;const u=Array.from({length:5}).map(()=>{const a=new L(d,new U(B.Random()));return a.SetRenderPipeline(n),a.Origin=[50,75],a});for(let a=-1;a<4;++a)(a<0&&e||u[a]).Add(u[a+1]);function g(a,x=0){for(;x<f.objects;++x){u[x].Visible=!0;const{translation:C,rotation:y,scale:j}=f;u[x].Transform=[C,y,j]}u[x]&&(u[x].Visible=!1),t.Render(e)}new ResizeObserver(a=>{for(const x of a){const{inlineSize:C,blockSize:y}=x.contentBoxSize[0];t.SetCanvasSize(C,y),r.Size=t.CanvasSize,e.AddCamera(r)}g()}).observe(document.body)})(document.getElementById("lesson"));
