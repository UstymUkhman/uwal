import{d as i,e as h,G as d,f as o,E as r}from"./index-BlHGMWAm.js";var L="@group(0)@binding(0)var<uniform>projection: mat4x4f;fn GetVertexClipSpace(position: vec4f)->vec4f{return projection*position;}@vertex fn vertex(@location(0)position: vec4f)->@builtin(position)vec4f {return GetVertexClipSpace(position);}",p="@group(0)@binding(1)var<uniform>color: vec4f;@fragment fn fragment()->@location(0)vec4f {return color;}",u="@group(0)@binding(0)var<uniform>projection: mat3x3f;fn GetVertexClipSpace(position: vec2f)->vec4f{let coords=projection*vec3f(position,1);return vec4f(coords.xy,0,1);}@vertex fn vertex(@location(0)position: vec2f)->@builtin(position)vec4f {return GetVertexClipSpace(position);}",g="@group(0)@binding(1)var<uniform>color: vec4f;@fragment fn fragment()->@location(0)vec4f {return color;}";const A=`${L}

${p}`,C=`${u}

${g}`;class m{Children=[];Label;#e=null;RotationOrder="XYZ";TransformationOrder="TRS";ProjectionMatrix=i.identity();#t=i.identity();#i=i.identity();#o=h.set(1,1,1);#r=h.create();#a=h.create();constructor(t,e=null){this.Label=t,this.Parent=e}Add(t){t=d(t),t.forEach(e=>e.Parent=this)}Remove(t){t=d(t),t.forEach(e=>e.Parent=null)}FindByLabel(t){let e=null;return this.Traverse(a=>{if(a.Label===t)return e=a}),e}Traverse(t){if(!t(this))for(let e=0,a=this.Children.length;e<a;++e)this.Children[e].Traverse(t)}ResetLocalMatrix(){this.#t=i.identity()}UpdateWorldMatrix(){this.#n(),this.#e?i.multiply(this.#e.WorldMatrix,this.#t,this.#i):i.copy(this.#t,this.#i),this.Children.forEach(t=>t.UpdateWorldMatrix())}#n(){this.#t=i.identity();const t=this.TransformationOrder.split("");for(let e=0,a=t.length;e<a;e++)switch(t[e]){case"T":i.translate(this.#t,this.#r,this.#t);break;case"R":for(let n=0,s=this.RotationOrder.length;n<s;++n){const c=this.RotationOrder[n],l=this.#a[c.charCodeAt()-88];i[`rotate${c}`](this.#t,l,this.#t)}break;case"S":i.scale(this.#t,this.#o,this.#t);break}}UpdateProjectionMatrix(t){const e=this.#e&&this.#i||this.#t;return i.multiply(t,e,this.ProjectionMatrix)}ResetProjectionMatrix(){this.ProjectionMatrix=i.identity()}RotateAxis(t,e){i.rotate(this.#t,t,e,this.#t)}RotateX(t){i.rotateX(this.#t,t,this.#t)}RotateY(t){i.rotateY(this.#t,t,this.#t)}RotateZ(t){i.rotateZ(this.#t,t,this.#t)}Scale(t){i.scale(this.#t,t,this.#t)}set Transform(t){this.#t=i.identity();const[e,a,n]=t,s=this.TransformationOrder.split("");for(let c=0,l=s.length;c<l;c++)switch(s[c]){case"T":e&&(this.Position=e);break;case"R":a&&(this.Rotation=a);break;case"S":n&&(this.Scaling=n);break}}set Position(t){h.copy(t,this.#r),i.translate(this.#t,t,this.#t)}get Position(){return this.#r}set Rotation(t){h.copy(t,this.#a);for(let e=0,a=this.RotationOrder.length;e<a;++e){const n=this.RotationOrder[e],s=t[n.charCodeAt()-88];i[`rotate${n}`](this.#t,s,this.#t)}}get Rotation(){return this.#a}set Scaling(t){h.copy(t,this.#o),i.scale(this.#t,t,this.#t)}get Scaling(){return this.#o}get LocalMatrix(){return this.#t}get WorldMatrix(){return this.#i}set Parent(t){if(this.#e){const e=this.#e.Children.indexOf(this);0<=e&&this.#e.Children.splice(e,1)}t&&t.Children.push(this),this.#e=t}get Parent(){return this.#e}}class R extends m{#e=new Set;MainCamera;constructor(t="Scene"){super(t),Reflect.deleteProperty(this,"ProjectionMatrix")}AddCamera(t){super.Add(t),this.#e.add(t),this.#e.size===1&&(this.MainCamera=t)}RemoveCamera(t){super.Remove(t),this.#e.delete(t),this.MainCamera===t&&(this.MainCamera=void 0)}ResetLocalMatrix(){o(r.INVALID_CALL,"method: `Scene.ResetLocalMatrix`.")}UpdateProjectionMatrix(t){o(r.INVALID_CALL,"method: `Scene.UpdateProjectionMatrix`.")}ResetProjectionMatrix(){o(r.INVALID_CALL,"method: `Scene.ResetProjectionMatrix`.")}RotateAxis(t,e){o(r.INVALID_CALL,"method: `Scene.RotateAxis`.")}RotateX(t){o(r.INVALID_CALL,"method: `Scene.RotateX`.")}RotateY(t){o(r.INVALID_CALL,"method: `Scene.RotateY`.")}RotateZ(t){o(r.INVALID_CALL,"method: `Scene.RotateZ`.")}Rotate(t){o(r.INVALID_CALL,"method: `Scene.Rotate`.")}Scale(t){o(r.INVALID_CALL,"method: `Scene.Scale`.")}Destroy(){this.#e.clear(),this.Children.splice(0),this.MainCamera=void 0}set Transform(t){o(r.INVALID_CALL,"setter: `Scene.Transform`.")}set Position(t){o(r.INVALID_CALL,"setter: `Scene.Position`.")}get Position(){o(r.INVALID_CALL,"getter: `Scene.Position`.")}set Rotation(t){o(r.INVALID_CALL,"setter: `Scene.Rotation`.")}get Rotation(){o(r.INVALID_CALL,"getter: `Scene.Rotation`.")}set Scaling(t){o(r.INVALID_CALL,"setter: `Scene.Scaling`.")}get Scaling(){o(r.INVALID_CALL,"getter: `Scene.Scaling`.")}get LocalMatrix(){o(r.INVALID_CALL,"getter: `Scene.LocalMatrix`.")}}export{A as C,m as N,R as S,C as a};
