var ft=s=>{throw TypeError(s)};var H=(s,e,r)=>e.has(s)||ft("Cannot "+r);var t=(s,e,r)=>(H(s,e,"read from private field"),r?r.call(s):e.get(s)),i=(s,e,r)=>e.has(s)?ft("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(s):e.set(s,r),n=(s,e,r,c)=>(H(s,e,"write to private field"),c?c.call(s,r):e.set(s,r),r),G=(s,e,r)=>(H(s,e,"access private method"),r);import{b as lt,T as Ct,E as gt,N as bt,U as Et,C as K,a as ht}from"./index-SclxQHPZ.js";import{a as v,v as ut}from"./wgpu-matrix.module-0Oa3LLlt.js";var Vt="struct Shape{color: vec4f,matrix: mat3x3f};@group(0)@binding(0)var<uniform>resolution: vec2f;fn GetClipSpace(position: vec2f)->vec2f{let clipSpace=position/resolution*2-1;return clipSpace*vec2f(1,-1);}@group(0)@binding(1)var<uniform>shape: Shape;fn GetVertexClipSpace(position: vec2f)->vec4f{let matrixPosition=shape.matrix*vec3f(position,1);let clipSpace=GetClipSpace(matrixPosition.xy);return vec4f(clipSpace,0.0,1.0);}@vertex fn vertex(@location(0)position: vec2f)->@builtin(position)vec4f {return GetVertexClipSpace(position);}",o,m,M,S,W,N,$,D,E,y,O,A,h,z,L,R,Y,w,x,_,U,I,V,B,pt,mt,xt,X;class At{constructor(e){i(this,B);i(this,o);i(this,m);i(this,M,0);i(this,S,!1);i(this,W,v.create());i(this,N,v.create());i(this,$,v.create());i(this,D,v.create());i(this,E);i(this,y);i(this,O);i(this,A);i(this,h);i(this,z);i(this,L);i(this,R);i(this,Y);i(this,w,new Float32Array([1,1]));i(this,x,new Float32Array([0,0]));i(this,_,new Float32Array([0,0]));i(this,U,new Float32Array([0,0]));i(this,I);i(this,V,lt({min:ut.create(),max:ut.create()}));!e.segments&&Ct(gt.REQUIRED_SEGMENTS),n(this,E,e.label??"Shape"),n(this,m,e.radius??0),n(this,o,e.renderer),n(this,y,e.segments);const{startAngle:r,endAngle:c,innerRadius:u}=e;G(this,B,pt).call(this,r,c,u),G(this,B,mt).call(this),G(this,B,xt).call(this),this.Scale=t(this,w),this.Origin=t(this,x),this.Rotation=t(this,M),this.Position=t(this,U)}Update(){return t(this,o).SetVertexBuffers(t(this,L)),t(this,o).SetIndexBuffer(t(this,z)),t(this,o).SetBindGroups(t(this,Y)),G(this,B,X).call(this)}Render(e=!0){t(this,o).SavePipelineState(),t(this,o).Render(t(this.Update(),O),e),t(this,o).RestorePipelineState()}set Color(e){t(this,A).set(Array.isArray(e)||ArrayBuffer.isView(e)?e:e.rgba),t(this,o).WriteBuffer(t(this,R),t(this,A),t(this,I).color)}get Color(){return t(this,A)}set Position(e){t(this,U).set(e),v.translation(t(this,U),t(this,D)),n(this,S,!0)}get Position(){return t(this,U)}set Rotation(e){v.rotation(n(this,M,e),t(this,$)),n(this,S,!0)}get Rotation(){return t(this,M)}set Scale(e){t(this,w).set(e),v.scaling(t(this,w),t(this,N)),n(this,S,!0)}get Scale(){return t(this,w)}set Origin(e){t(this,x)[0]=e[0],t(this,x)[1]=e[1],t(this,x)[0]*=-t(this,m),t(this,x)[1]*=-t(this,m),v.translation(t(this,x),t(this,W)),t(this,x)[0]=e[0]||0,t(this,x)[1]=e[1]||0,n(this,S,!0)}get Origin(){return t(this,x)}get Center(){return t(G(this,B,X).call(this),_)}get Vertices(){return t(this,O)}get Transform(){return t(this,h)}get BoundingBox(){return t(this,V)}}o=new WeakMap,m=new WeakMap,M=new WeakMap,S=new WeakMap,W=new WeakMap,N=new WeakMap,$=new WeakMap,D=new WeakMap,E=new WeakMap,y=new WeakMap,O=new WeakMap,A=new WeakMap,h=new WeakMap,z=new WeakMap,L=new WeakMap,R=new WeakMap,Y=new WeakMap,w=new WeakMap,x=new WeakMap,_=new WeakMap,U=new WeakMap,I=new WeakMap,V=new WeakMap,B=new WeakSet,pt=function(e=0,r=bt.TAU,c=0){const u=r-e,C=new Float32Array((t(this,y)+1)*2*3);for(let p=0,P=0;P<=t(this,y);++P){const k=e+P*u/t(this,y),T=Math.cos(k),l=Math.sin(k);C[p++]=T*t(this,m),C[p++]=l*t(this,m),C[p++]=T*c,C[p++]=l*c}n(this,L,t(this,o).CreateVertexBuffer(C,{label:`${t(this,E)} Vertex Buffer`})),t(this,o).WriteBuffer(t(this,L),C)},mt=function(){const e=new Uint32Array(n(this,O,t(this,y)*6));for(let r=0,c=0;c<t(this,y);++c){const u=c*2;e[r++]=u+1,e[r++]=u+3,e[r++]=u+2,e[r++]=u+2,e[r++]=u+0,e[r++]=u+1}n(this,z,t(this,o).CreateIndexBuffer(e,{label:`${t(this,E)} Index Buffer`})),t(this,o).WriteBuffer(t(this,z),e)},xt=function(){const{buffer:e,shape:{color:r,matrix:c}}=t(this,o).CreateUniformBuffer("shape",{label:`${t(this,E)} Uniform Buffer`});n(this,R,e),n(this,h,c),n(this,A,r),n(this,Y,t(this,o).CreateBindGroup(t(this,o).CreateBindGroupEntries([{buffer:t(this,o).ResolutionBuffer},{buffer:t(this,R)}]),0,`${t(this,E)} Bind Group`)),n(this,I,lt({matrix:r.length*Float32Array.BYTES_PER_ELEMENT,color:0*Float32Array.BYTES_PER_ELEMENT}))},X=function(){if(t(this,S)){v.multiply(t(this,D),t(this,$),t(this,h)),v.multiply(t(this,h),t(this,N),t(this,h)),v.multiply(t(this,h),t(this,W),t(this,h)),t(this,o).WriteBuffer(t(this,R),t(this,h),t(this,I).matrix);const e=t(this,_)[0]=t(this,h)[8],r=t(this,_)[1]=t(this,h)[9];t(this,V).min[0]=e-t(this,m),t(this,V).min[1]=r-t(this,m),t(this,V).max[0]=e+t(this,m),t(this,V).max[1]=r+t(this,m),n(this,S,!1)}return this};var Rt="struct VertexOutput{@builtin(position)position: vec4f,@location(0)color: vec4f};@vertex fn mainVertex(@location(0)position: vec2f,@location(1)color: vec4f,@location(2)offset: vec2f,@location(3)scale: vec2f,@location(4)vertexColor: vec4f)->VertexOutput{var output: VertexOutput;let clipSpace=GetVertexClipSpace(position*scale).xy;output.position=vec4f(clipSpace+(offset+0.9)/1.8*vec2f(2,-2),0.0,1.0);output.color=color*vertexColor;return output;}@fragment fn fragment(@location(0)color: vec4f)->@location(0)vec4f {return color;}";/**
 * @module Timing Performance
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This lesson is reproduced from WebGPU Timing Performance
 * {@link https://webgpufundamentals.org/webgpu/lessons/webgpu-timing.html}&nbsp;
 * and developed by using a version listed below. Please note that this code
 * may be simplified in future thanks to more recent library APIs.
 * @version 0.0.9
 * @license MIT
 */(async function(s){let e;try{e=new(await Et.RenderPipeline(s,"Timing Performance"))}catch(a){alert(a)}const r=24,c=0,u=0,C=2,p=1e4,P=[],k=new GUI,T={objects:100};k.add(T,"objects",0,p,1);const l=document.createElement("pre"),Z=document.createElement("span"),tt=document.createElement("span");l.style.backgroundColor="rgb(0 0 0 / 0.8)",l.style.position="absolute",l.style.padding="0.5em",l.style.display="grid",l.style.color="white",l.style.margin="0px",l.style.left="0px",l.style.top="0px",l.append(Z,tt),document.body.appendChild(l);const et=e.CreateShaderModule([Vt,Rt]),rt=e.CreateColorAttachment();rt.clearValue=new K(5000268).rgba,e.CreatePassDescriptor(rt);const dt=e.CreateVertexBufferLayout("position",void 0,"mainVertex"),{buffer:q,layout:vt}=e.CreateVertexBuffer([{name:"color",format:"unorm8x4"}],p,"instance","mainVertex"),{buffer:J,layout:Bt}=e.CreateVertexBuffer(["offset","scale"],p,"instance","mainVertex"),{buffer:it,layout:St}=e.CreateVertexBuffer({name:"vertexColor",format:"unorm8x4"},p,void 0,"mainVertex");e.CreatePipeline({fragment:e.CreateFragmentState(et),vertex:e.CreateVertexState(et,"mainVertex",[dt,vt,Bt,St])});const yt=new At({renderer:e,innerRadius:120,radius:240,segments:r}).Update().Vertices,Q=new Float32Array(J.size/Float32Array.BYTES_PER_ELEMENT);e.AddVertexBuffers([q,J,it]);{const a=q.size/p,f=new Uint8Array(q.size);for(let d=0;d<p;++d)f.set([g(255),g(255),g(255),255],a*d+c),P.push({scale:g(.2,.5),offset:[g(-.9,.9),g(-.9,.9)],velocity:[g(-.1,.1),g(-.1,.1)]});e.WriteBuffer(q,f)}{const a=new K(1644825),f=new K(16777215),d=new Uint8Array((r+1)*8);for(let F=0,b=0;F<=r;F++,b+=8)d.set(a.RGBA,b),d.set(f.RGBA,b+4);e.WriteBuffer(it,d)}function g(a,f){return a===void 0?(a=0,f=1):f===void 0&&(f=a,a=0),Math.random()*(f-a)+a}let st=0;function ot(a){a*=.001;const f=a-st,d=performance.now(),F=J.size/p/4;for(let b=0;b<T.objects;b++){const{scale:nt,offset:j,velocity:at}=P[b];j[0]=ht.EuclideanModulo(j[0]+at[0]*f+1.5,3)-1.5,j[1]=ht.EuclideanModulo(j[1]+at[1]*f+1.5,3)-1.5;const ct=b*F;Q.set(j,ct+u),Q.set([nt,nt],ct+C)}e.WriteBuffer(J,Q),e.Render([yt,T.objects]),Z.textContent=`FPS: ${(1/f).toFixed(1)}`,tt.textContent=`JS: ${(performance.now()-d).toFixed(1)}ms`,requestAnimationFrame(ot),st=a}new ResizeObserver(a=>{for(const f of a){const{inlineSize:d,blockSize:F}=f.contentBoxSize[0];e.SetCanvasSize(d,F)}requestAnimationFrame(ot)}).observe(s)})(document.getElementById("lesson"));
