import{G as r}from"./index-BEuvW3M9.js";class f{#a=new Float32Array([.5,.5,.75,.5,.5,1,.75,1,.25,.5,.5,.5,.25,1,.5,1,0,0,0,.5,.25,0,.25,.5,.5,0,.5,.5,.75,0,.75,.5,0,.5,.25,.5,0,1,.25,1,.25,0,.5,0,.25,.5,.5,.5]);#i;#h;#t;#e;#r;#s=[];#f=new Float32Array(16);constructor(e,t){this.#e=e,this.#i=t??"Cube",this.#u(),this.#n(),this.#o()}#u(){const e=new Uint16Array([0,1,2,2,1,3,4,5,6,6,5,7,8,9,10,10,9,11,12,13,14,14,13,15,16,17,18,18,17,19,20,21,22,22,21,23]);this.#t=this.#e.CreateIndexBuffer(e,{label:`${this.#i} Index Buffer`}),this.#e.WriteBuffer(this.#t,e),this.#e.SetIndexBuffer(this.#t,"uint16"),this.#h=e.length}#n(){const e=new Float32Array([-1,1,1,1,1,1,-1,1,-1,1,1,-1,1,-1,1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,1,1,1,1,1,-1,1,1,1,-1,1,-1,-1,-1,1,-1,-1,-1,-1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,-1,1,1,-1,1,1,1,1,-1,-1,1,-1,1]),t=this.#e.CreateVertexBuffer(e,{label:`${this.#i} Vertex Buffer`});this.#e.WriteBuffer(t,e),this.#e.SetVertexBuffers(t),this.#s.push(t)}#o(){this.#r=this.#e.CreateBuffer({size:this.#f.length*Float32Array.BYTES_PER_ELEMENT,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,label:`${this.#i} Uniform Buffer`})}AddVertexBuffers(e){this.#s.push(...r(e))}UpdateTransformBuffer(){this.#e.WriteBuffer(this.#r,this.#f)}Render(e=!0){this.#e.SavePipelineState(),this.#e.Render(this.Update(),e),this.#e.RestorePipelineState()}Update(){return this.#e.WriteBuffer(this.#r,this.#f),this.#e.SetIndexBuffer(this.#t,"uint16"),this.#e.SetVertexBuffers(this.#s),this.#h}get PositionAttribute(){return{name:"position",format:"float32x3"}}get TransformBuffer(){return this.#r}get Transform(){return this.#f}get Vertices(){return this.#h}get UV(){return this.#a}Destroy(){this.#r=this.#r.destroy(),this.#s.forEach(e=>e.destroy()),this.#t=this.#t.destroy(),this.#s.splice(0)}}export{f as L};
