var B=s=>{throw TypeError(s)};var b=(s,t,i)=>t.has(s)||B("Cannot "+i);var h=(s,t,i)=>(b(s,t,"read from private field"),i?i.call(s):t.get(s)),g=(s,t,i)=>t.has(s)?B("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(s):t.set(s,i),r=(s,t,i,o)=>(b(s,t,"write to private field"),o?o.call(s,i):t.set(s,i),i);var e,f,c,n;class u{constructor(t=0,i,o,G=255){g(this,e,0);g(this,f,0);g(this,c,0);g(this,n,1);typeof i=="number"&&typeof o=="number"?this.RGBA=[t,i,o,G]:(r(this,e,(t>>16&255)/255),r(this,f,(t>>8&255)/255),r(this,c,(t&255)/255),r(this,n,G/255))}set rgb(t){r(this,e,t[0]),r(this,f,t[1]),r(this,c,t[2]),r(this,n,t[3]??1)}get rgb(){return[h(this,e),h(this,f),h(this,c)]}set rgba(t){this.rgb=t}get rgba(){return this.rgb.concat(h(this,n))}set RGB(t){r(this,e,t[0]/255),r(this,f,t[1]/255),r(this,c,t[2]/255),r(this,n,(t[3]??255)/255)}get RGB(){return[h(this,e)*255,h(this,f)*255,h(this,c)*255]}set RGBA(t){this.RGB=t}get RGBA(){return this.RGB.concat(h(this,n)*255)}}e=new WeakMap,f=new WeakMap,c=new WeakMap,n=new WeakMap;var A="const QUAD=array(vec2f(-1.0,-1.0),vec2f(1.0,-1.0),vec2f(1.0,1.0),vec2f(1.0,1.0),vec2f(-1.0,1.0),vec2f(-1.0,-1.0));fn GetQuadCoord(index: u32)->vec2f{return QUAD[index];}";export{u as C,A as Q};
