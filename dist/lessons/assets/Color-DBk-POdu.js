var G=i=>{throw TypeError(i)};var R=(i,t,s)=>t.has(i)||G("Cannot "+s);var h=(i,t,s)=>(R(i,t,"read from private field"),s?s.call(i):t.get(i)),b=(i,t,s)=>t.has(i)?G("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(i):t.set(i,s),r=(i,t,s,c)=>(R(i,t,"write to private field"),c?c.call(i,s):t.set(i,s),s);var e,n,f,g;const B=class B{constructor(t=0,s,c,o=255){b(this,e,0);b(this,n,0);b(this,f,0);b(this,g,1);typeof s=="number"&&typeof c=="number"?this.RGBA=[t,s,c,o]:(r(this,e,(t>>16&255)/255),r(this,n,(t>>8&255)/255),r(this,f,(t&255)/255),r(this,g,o/255))}Premultiply(t,s){s??(s=new B),t??(t=h(this,g));const c=h(this,e)*t,o=h(this,n)*t,A=h(this,f)*t;return s.rgba=[c,o,A,t],s}set rgb(t){r(this,e,t[0]),r(this,n,t[1]),r(this,f,t[2]),r(this,g,t[3]??1)}get rgb(){return[h(this,e),h(this,n),h(this,f)]}set rgba(t){this.rgb=t}get rgba(){return this.rgb.concat(h(this,g))}set RGB(t){r(this,e,t[0]/255),r(this,n,t[1]/255),r(this,f,t[2]/255),r(this,g,(t[3]??255)/255)}get RGB(){return[h(this,e)*255,h(this,n)*255,h(this,f)*255]}set RGBA(t){this.RGB=t}get RGBA(){return this.RGB.concat(h(this,g)*255)}};e=new WeakMap,n=new WeakMap,f=new WeakMap,g=new WeakMap;let u=B;export{u as C};
