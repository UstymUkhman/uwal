import{a as d,b as l,D as ee}from"./index-CWG6eoQD.js";import{C as te,a as oe}from"./Cube-Uz7Qg183.js";import{P as re}from"./PerspectiveCamera-MopHud7N.js";class L{#r;#e=null;Children=[];#n="";#t=d.identity();#o=d.identity();constructor(e="",i){this.#n=e,this.#r=i}Add(e){e.Parent=this}Remove(e){e.Parent=null}UpdateWorldMatrix(e){this.#r?.GetMatrix(this.#t),e?d.multiply(e,this.#t,this.#o):d.copy(this.#t,this.#o),this.Children.forEach(i=>i.UpdateWorldMatrix(this.#o))}set Parent(e){if(this.#e){const i=this.#e.Children.indexOf(this);0<=i&&this.#e.Children.splice(i,1)}e&&e.Children.push(this),this.#e=e}get LocalMatrix(){return this.#t}get WorldMatrix(){return this.#o}}class ne{#r=l.create();#e=l.create();#n=l.create();#t="XYZ";constructor(e=l.zero(),i=l.zero(),f=l.set(1,1,1)){l.copy(e,this.#r),l.copy(i,this.#e),l.copy(f,this.#n)}#o(e,i=this.#t){for(let f=0;f<i.length;++f){const u=this.#e[i[f].charCodeAt()-88];d[`rotate${i[f]}`](e,u,e)}}GetMatrix(e){return d.translation(this.#r,e),this.#o(e),d.scale(e,this.#n,e),e}}/**
 * @module Scene Graphs
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This lesson is reproduced from WebGPU Matrix Stacks
 * {@link https://webgpufundamentals.org/webgpu/lessons/webgpu-scene-graphs.html}&nbsp;
 * and developed by using a version listed below. Please note that this code
 * may be simplified in future thanks to more recent library APIs.
 * @version 0.1.0
 * @license MIT
 */(async function(m){let e;m.style.backgroundColor="#000";try{e=new(await ee.Renderer(m,"Scene Graphs",{alphaMode:"premultiplied"}))}catch(t){alert(t)}const i={min:-180,max:180,step:1,converters:GUI.converters.radToDeg},f=[.75,.75,.75,.75],[u,p,C]=[0,1,2],k=[.5,.5,.5,1],E=[1,1,1,1],s=[40,30,50],R=[10,2,2],M=4,w=[];let S=0;const j=5,v=[];d.create();const N=new GUI().onChange(O),U={cameraRotation:0};N.add(U,"cameraRotation",i);const X=[0,s[p]/3*2-s[p]/2,R[C]/2+s[C]/2],A=s[u]+10,V=s[p]+3,x=[s[u]+6,V*M+6,s[C]+4],h=new re(60,1,2e3);let W=h.UpdateViewProjection();const Y=(x[u]+A)/2*(j-1)/2;e.CreatePassDescriptor(e.CreateColorAttachment(),e.CreateDepthStencilAttachment());const b=new oe,n=new e.Pipeline,z=n.CreateShaderModule(te),{layout:F,buffer:G}=n.CreateVertexBuffer({name:"color",format:"unorm8x4"},36);b.SetRenderPipeline(await e.AddPipeline(n,{primitive:{cullMode:"back"},fragment:n.CreateFragmentState(z),depthStencil:n.CreateDepthStencilState(),vertex:n.CreateVertexState(z,void 0,[b.GetPositionBufferLayout(n),F])}));const Z=[200,200,70,90,130,110,70,200,210,160,160,220,200,70,120,80,70,200],D=b.UV.length/2,B=new Uint8Array(D*4);for(let t=0,o=0;t<D;o=(++t/4|0)*3){const r=Z.slice(o,o+3);B.set(r,t*4),B[t*4+3]=255}n.WriteBuffer(G,B),b.AddVertexBuffers(G);function P(t,o,r){const a=new L(t,new ne(...r));return o&&(a.Parent=o),a}function g(t,o,r,a){const c=P(t,o,r),y=v.push({node:c,color:a});return v[y-1]}function _(t,o){const r=`drawer${o}`,a=x[p]/2-s[p]/2-5,c=P(r,t,[[0,V*o-a,3]]);g(`${r}-drawer-mesh`,c,[void 0,void 0,s],E),g(`${r}-drawer-mesh`,c,[X,void 0,R],k)}function q(t,o){const r=`cabinet${o}`,a=P(r,t,[[o*A,0,0]]);g(`${r}-mesh`,a,[void 0,void 0,x],f);for(let c=0;c<M;++c)_(a,c)}const T=new L("root");for(let t=0;t<j;++t)q(T,t);function H(t,o){if(S===w.length){const{projection:K,buffer:$}=n.CreateUniformBuffer("projection"),{color:Q,buffer:I}=n.CreateUniformBuffer("color");n.AddBindGroups(n.CreateBindGroup(n.CreateBindGroupEntries([I,$]))),w.push({projectionValue:K,projectionBuffer:$,colorValue:Q,colorBuffer:I})}const{projectionValue:r,projectionBuffer:a,colorValue:c,colorBuffer:y}=w[S];c.set(o),n.WriteBuffer(y,c),d.multiply(W,t,r),n.WriteBuffer(a,r),n.SetActiveBindGroups(S++),e.Render(!1)}function J(t){const{node:o,color:r}=t;H(o.WorldMatrix,r)}function O(){h.ResetMatrix(),h.Translate([Y,20,0]),h.RotateY(U.cameraRotation),h.Translate([0,0,300]),W=h.UpdateViewProjection(),T.UpdateWorldMatrix();for(const t of v)J(t);e.Submit()}new ResizeObserver(t=>{for(const o of t){const{inlineSize:r,blockSize:a}=o.contentBoxSize[0];e.SetCanvasSize(r,a),h.AspectRatio=e.AspectRatio,h.UpdateViewProjection()}O()}).observe(document.body)})(document.getElementById("lesson"));
