import{D as a}from"./index-DM-yqRiN.js";import{Q as S}from"./Quad-VFYOTGYq.js";var E="struct Screen{color: vec3f,time: f32};struct VertexOutput{@location(0)coord: vec2f,@builtin(position)position: vec4f};@group(0)@binding(0)var<uniform>screen: Screen;@vertex fn vertex(@builtin(vertex_index)index: u32)->VertexOutput {var output: VertexOutput;let coord=GetQuadCoord(index);output.position=vec4f(coord,0,1);output.coord=(coord+1)*0.5;return output;}@fragment fn fragment(@location(0)coord: vec2f)->@location(0)vec4f {let a=screen.color*cos(screen.time);let l=screen.color*length(coord.xy);return vec4f(screen.color+a+l,1);}";/**
 * @example Screen Shader
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This example is inspired by OGL's "Triangle Screen Shader"
 * {@link https://oframe.github.io/ogl/examples/?src=triangle-screen-shader.html}&nbsp;
 * and developed by using a version listed below. Please note that this code
 * may be simplified in future thanks to more recent library APIs.
 * @version 0.0.4
 * @license MIT
 */let o,n,c,e;async function y(l){try{e=new(await a.RenderPipeline(l,"Screen Shader"))}catch(r){alert(r)}const d=e.CreatePassDescriptor(e.CreateColorAttachment()),u=e.CreateShaderModule([S,E]);e.CreatePipeline({vertex:e.CreateVertexState(u),fragment:e.CreateFragmentState(u)});const s=Float32Array.BYTES_PER_ELEMENT+Float32Array.BYTES_PER_ELEMENT*3;o=e.CreateBuffer({size:s,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});const m=e.CreateBindGroup(e.CreateBindGroupEntries({buffer:o}));e.SetBindGroups(m);const i=new Float32Array(s/Float32Array.BYTES_PER_ELEMENT);i.set([0,.3515625,.609375]);function f(r){n=requestAnimationFrame(f),i.set([r*.001],3),d.colorAttachments[0].view=e.CurrentTextureView,e.WriteBuffer(o,i),e.Render(6)}c=new ResizeObserver(r=>{for(const p of r){let{inlineSize:t,blockSize:v}=p.contentBoxSize[0];t=t<=960&&t||t-240,e.SetCanvasSize(t,v)}cancelAnimationFrame(n),n=requestAnimationFrame(f)}),c.observe(document.body)}function B(){a.OnDeviceLost=()=>{},o?.destroy(),cancelAnimationFrame(n),c.disconnect(),e.Destroy(),a.Destroy()}export{B as destroy,y as run};
