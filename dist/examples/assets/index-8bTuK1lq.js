import{G as F,C as x,D as g}from"./index-ELOcnE7E.js";import{S as M,a as D,b as G}from"./Shape-PJwMpm2R.js";import{M as o}from"./Math-Cr7J2GA5.js";var U="@group(0)@binding(2)var<uniform>color: vec4f;@fragment fn fragment()->@location(0)vec4f {return color;}";const _=`${M}

${U}`;class L{#r;#t;#n;#o;#e;constructor(t=16777215,i="Shape"){this.Color=t,this.#r=i}CreateColorBuffer(t,i=this.#r){const{color:s,buffer:c}=t.CreateUniformBuffer("color",{label:`${i} Color Buffer`});this.#t=s,this.#n=t,this.#e=c,this.#t.set(this.#o),t.WriteBuffer(c,s)}get ColorBuffer(){return this.#e}set Color(t){this.#o=typeof t=="number"&&F(t)||t instanceof x&&t.rgba||Object.values(t),this.#t?.fill(1).set(this.#o),this.#n?.WriteBuffer(this.#e,this.#t)}get Color(){return this.#o}Destroy(){this.#n=void 0,this.#e.destroy(),this.#e=void 0}}/**
 * @example 2D Shapes
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This example is developed by using a version listed below.
 * Please note that this code may be simplified in future
 * thanks to more recent library APIs.
 * @version 0.2.0
 * @license MIT
 */let R,r;const d=[];let b;async function W(p){try{r=new(await g.Renderer(p,"2D Shapes"))}catch(f){alert(f)}const t=new x(3349069),i=[],s=[],c=[],v=new D,l=new r.Pipeline,w=l.CreateShaderModule(_);await r.AddPipeline(l,{fragment:l.CreateFragmentState(w),vertex:l.CreateVertexState(w,v.GetPositionBufferLayout(l))}),r.CreatePassDescriptor(r.CreateColorAttachment(t)),v.Destroy();function P(){i.splice(0),s.splice(0),d.splice(0),c.splice(0),cancelAnimationFrame(R)}function A(){z(),R=requestAnimationFrame(B)}function y(){return t.rgb=[o.Random(.3),o.Random(.2),o.Random(.4)]}function z(){const[f,u]=r.CanvasSize;for(let e=3;e<=12;e++){const m=e===11&&64||e;for(let n=0;n<2;n++){const a=o.Random(50,100),C=o.Random(.75,.95)*a,S=new D({segments:m,radius:a,innerRadius:C*n}),h=new G(S,new L(y()));h.SetRenderPipeline(l,r.ResolutionBuffer),h.Rotation=o.Random(0,o.TAU),h.Position=[o.Random(a,f-a),o.Random(a,u-a)],s.push(o.Random(1,10)),i.push(o.Random(0,.1)),c.push([o.Random(-1,1),o.Random(-1,1)]),d.push(h)}}}function B(){const[f,u]=r.CanvasSize;for(let e=0,m=d.length;e<m;e++){const n=d[e],a=c[e],{min:C,max:S}=n.BoundingBox,[h,$]=n.Position;(C[0]<=0||S[0]>=f)&&(a[0]*=-1,n.Material.Color=y()),(C[1]<=0||S[1]>=u)&&(a[1]*=-1,n.Material.Color=y()),n.Position=[h+a[0]*s[e],$+a[1]*s[e]],n.Rotation+=i[e],n.Update(),n.SetPipelineData(),r.Render(!1)}r.Submit(),R=requestAnimationFrame(B)}b=new ResizeObserver(f=>{for(const u of f){let{inlineSize:e,blockSize:m}=u.contentBoxSize[0];e=e<=960&&e||e-240,r.SetCanvasSize(e,m)}P(),A()}),b.observe(document.body)}function j(){d.forEach(p=>p.Destroy()),g.OnLost=()=>{},cancelAnimationFrame(R),b.disconnect(),r.Destroy(),d.splice(0),g.Destroy()}export{j as destroy,W as run};
