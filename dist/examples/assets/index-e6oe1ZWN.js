var F=(r,e,n)=>{if(!e.has(r))throw TypeError("Cannot "+n)};var o=(r,e,n)=>(F(r,e,"read from private field"),n?n.call(r):e.get(r)),h=(r,e,n)=>{if(e.has(r))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(r):e.set(r,n)},i=(r,e,n,l)=>(F(r,e,"write to private field"),l?l.call(r,n):e.set(r,n),n);import{U as B,F as V}from"./index-B25kT6SQ.js";import{S as v,a as q}from"./Shape.vert-CRUiumK3.js";var c,u,f,s;class W{constructor(e=0){h(this,c,1);h(this,u,1);h(this,f,1);h(this,s,1);this.Value=e}set rgb(e){i(this,c,e[0]),i(this,u,e[1]),i(this,f,e[2]),i(this,s,e[3]??1)}get rgb(){return[o(this,c),o(this,u),o(this,f)]}set rgba(e){this.rgb=e}get rgba(){return this.rgb.concat(o(this,s))}set RGB(e){i(this,c,e[0]/255),i(this,u,e[1]/255),i(this,f,e[2]/255),i(this,s,(e[3]??255)/255)}get RGB(){return[o(this,c)*255,o(this,u)*255,o(this,f)*255]}set RGBA(e){this.RGB=e}get RGBA(){return this.RGB.concat(o(this,s)*255)}set Value(e){e>16777215?i(this,s,(e&255)/255):(e=e<<8|e>>>24,e>>>=0,i(this,s,1)),i(this,c,(e>>24&255)/255),i(this,u,(e>>16&255)/255),i(this,f,(e>>8&255)/255)}}c=new WeakMap,u=new WeakMap,f=new WeakMap,s=new WeakMap;var j="struct VertexOutput{@location(0)textureCoord: vec2f,@builtin(position)position: vec4f,@location(1)@interpolate(flat)instance: u32,};@group(1)@binding(0)var Sampler: sampler;@group(1)@binding(1)var Texture: texture_2d<f32>;@group(1)@binding(2)var<storage,read>visible: array<u32>;@vertex fn mainVertex(@location(0)position: vec2f,@location(1)translation: vec2f,@builtin(instance_index)instance: u32)->VertexOutput{var output: VertexOutput;let aspect=resolution/resolution.y;let clipSpace=GetVertexClipSpace(position).xy;output.position=vec4f(clipSpace+translation,0,1);output.textureCoord=clipSpace*aspect*2.5+0.5;output.instance=instance;return output;}@fragment fn fragment(@location(0)textureCoord: vec2f,@location(1)@interpolate(flat)instance: u32)->@location(0)vec4f{if(visible[instance]==0){discard;}return textureSample(Texture,Sampler,textureCoord);}";const X=""+new URL("logo-DEvozEyj.jpg",import.meta.url).href;/**
 * @example Texture / Instancing
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This example is developed by using a version listed below.
 * Please note that this code may be simplified in future
 * thanks to more recent library APIs.
 * @version 0.0.5
 * @license MIT
 */let m,R;async function K(r){let e;try{e=new(await B.RenderPipeline(r,"Texture / Instancing"))}catch(t){alert(t)}const n=128,l=100;let p,E,C,b,x,d=500,S=performance.now()-d;const y=e.CreateShaderModule([v,j]),_=e.CreateColorAttachment();_.clearValue=new W(1651532).rgba,e.CreatePassDescriptor(_),e.CreatePipeline({fragment:e.CreateFragmentState(y),vertex:e.CreateVertexState(y,"mainVertex",[{arrayStride:Float32Array.BYTES_PER_ELEMENT*2,attributes:[e.CreateVertexBufferAttribute("float32x2")]},{stepMode:"instance",arrayStride:Float32Array.BYTES_PER_ELEMENT*2,attributes:[e.CreateVertexBufferAttribute("float32x2",1)]}])});function L(){cancelAnimationFrame(m),clearTimeout(b),S=performance.now()-d}async function M(){N(),Y(),I(),await O(),requestAnimationFrame(U),b=setTimeout(()=>d=~(x=-1),d*3)}function N(){const t=new q({renderer:e,segments:4,radius:n});t.Position=[r.width/2,r.height/2],t.Rotation=Math.PI/4,C=t.Update().Vertices}function Y(){const t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,a=Uint32Array.BYTES_PER_ELEMENT*l;p=new Uint32Array(a/Uint32Array.BYTES_PER_ELEMENT),E=e.CreateBuffer({size:a,usage:t}),e.WriteBuffer(E,p)}function I(){const t=1-Math.sqrt(2)*n/r.height,a=1-Math.sqrt(2)*n/r.width,g=Float32Array.BYTES_PER_ELEMENT*2,T=g*l,D=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,P=e.CreateBuffer({size:T,usage:D}),z=g/Float32Array.BYTES_PER_ELEMENT,w=new Float32Array(T/Float32Array.BYTES_PER_ELEMENT);for(let G=l;G--;)w.set([A(-a,a),A(-t,t)],z*G);e.WriteBuffer(P,w),e.AddVertexBuffers(P)}async function O(){const t=new(await B.Texture()),a=await t.CreateBitmapImage(await(await fetch(X)).blob(),{colorSpaceConversion:"none"}),g=t.CopyImageToTexture(a,{flipY:!0,create:{usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST,format:"rgba8unorm"}});e.AddBindGroups(e.CreateBindGroup(e.CreateBindGroupEntries([t.CreateSampler({magFilter:V.LINEAR,minFilter:V.LINEAR}),g.createView(),{buffer:E}]),1))}function A(t,a){return t===void 0?(t=0,a=1):a===void 0&&(a=t,t=0),Math.random()*(a-t)+t}function U(t){m=requestAnimationFrame(U),!(t-S<d)&&(d?p.fill(0)&&(x=A(p.length)|0):++x===p.length-1&&cancelAnimationFrame(m),S=t,p[x]=1,e.WriteBuffer(E,p),e.Render([C,l]))}R=new ResizeObserver(t=>{for(const a of t){const{inlineSize:g,blockSize:T}=a.contentBoxSize[0];e.SetCanvasSize(g,T)}L(),M()}),R.observe(r)}function Q(){B.OnDeviceLost=()=>{},cancelAnimationFrame(m),R.disconnect(),B.Destroy()}export{Q as destroy,K as run};
