import{m as i,v as c,b as L,c as r,E as s}from"./index-vi7ojKh9.js";class A{Children=[];Label;#e=null;RotationOrder="XYZ";TransformationOrder="TRS";ProjectionMatrix=i.identity();#t=i.identity();#i=i.identity();#r=c.set(1,1,1);#s=c.create();#o=c.create();constructor(t,e=null){this.Label=t,this.Parent=e}Add(t){t=L(t),t.forEach(e=>e.Parent=this)}Remove(t){t=L(t),t.forEach(e=>e.Parent=null)}Find(t){let e=null;return this.Traverse(o=>{if(o.Label===t)return e=o}),e}Traverse(t){if(!t(this))for(let e=0,o=this.Children.length;e<o;++e)this.Children[e].Traverse(t)}ResetLocalMatrix(){i.identity(this.#t)}UpdateWorldMatrix(){this.#a(),this.#e?i.multiply(this.#e.WorldMatrix,this.#t,this.#i):i.copy(this.#t,this.#i),this.Children.forEach(t=>t.UpdateWorldMatrix())}#a(){i.identity(this.#t);const t=this.TransformationOrder.split("");for(let e=0,o=t.length;e<o;e++)switch(t[e]){case"T":i.translate(this.#t,this.#s,this.#t);break;case"R":for(let a=0,n=this.RotationOrder.length;a<n;++a){const h=this.RotationOrder[a],l=this.#o[h.charCodeAt()-88];i[`rotate${h}`](this.#t,l,this.#t)}break;case"S":i.scale(this.#t,this.#r,this.#t);break}}UpdateProjectionMatrix(t){const e=this.#e&&this.#i||this.#t;return i.multiply(t,e,this.ProjectionMatrix)}ResetProjectionMatrix(){i.identity(this.ProjectionMatrix)}RotateAxis(t,e){i.rotate(this.#t,t,e,this.#t)}RotateX(t){i.rotateX(this.#t,t,this.#t)}RotateY(t){i.rotateY(this.#t,t,this.#t)}RotateZ(t){i.rotateZ(this.#t,t,this.#t)}Scale(t){i.scale(this.#t,t,this.#t)}set Transform(t){i.identity(this.#t);const[e,o,a]=t,n=this.TransformationOrder.split("");for(let h=0,l=n.length;h<l;h++)switch(n[h]){case"T":e&&(this.Position=e);break;case"R":o&&(this.Rotation=o);break;case"S":a&&(this.Scaling=a);break}}set Position(t){c.copy(t,this.#s),i.translate(this.#t,t,this.#t)}get Position(){return this.#s}set Rotation(t){c.copy(t,this.#o);for(let e=0,o=this.RotationOrder.length;e<o;++e){const a=this.RotationOrder[e],n=t[a.charCodeAt()-88];i[`rotate${a}`](this.#t,n,this.#t)}}get Rotation(){return this.#o}set Scaling(t){c.copy(t,this.#r),i.scale(this.#t,t,this.#t)}get Scaling(){return this.#r}get LocalMatrix(){return this.#t}get WorldMatrix(){return this.#i}set Parent(t){if(this.#e){const e=this.#e.Children.indexOf(this);0<=e&&this.#e.Children.splice(e,1)}t&&t.Children.push(this),this.#e=t}get Parent(){return this.#e}}class m extends A{#e=new Set;MainCamera;constructor(t="Scene"){super(t),Reflect.deleteProperty(this,"ProjectionMatrix")}Find(t){let e=super.Find(t);if(e)return e;for(const o of this.#e)if(o.Label===t)return o;return null}AddCamera(t){this.#e.add(t),this.#e.size===1&&(this.MainCamera=t)}RemoveCamera(t){this.#e.delete(t),this.MainCamera===t&&(this.MainCamera=void 0)}ResetLocalMatrix(){r(s.INVALID_CALL,"method: `Scene.ResetLocalMatrix`.")}UpdateProjectionMatrix(t){r(s.INVALID_CALL,"method: `Scene.UpdateProjectionMatrix`.")}ResetProjectionMatrix(){r(s.INVALID_CALL,"method: `Scene.ResetProjectionMatrix`.")}RotateAxis(t,e){r(s.INVALID_CALL,"method: `Scene.RotateAxis`.")}RotateX(t){r(s.INVALID_CALL,"method: `Scene.RotateX`.")}RotateY(t){r(s.INVALID_CALL,"method: `Scene.RotateY`.")}RotateZ(t){r(s.INVALID_CALL,"method: `Scene.RotateZ`.")}Rotate(t){r(s.INVALID_CALL,"method: `Scene.Rotate`.")}Scale(t){r(s.INVALID_CALL,"method: `Scene.Scale`.")}Destroy(){this.Traverse(t=>this!==t&&t.Destroy?.()),this.MainCamera=void 0,this.Children.splice(0),this.#e.clear()}set Transform(t){r(s.INVALID_CALL,"setter: `Scene.Transform`.")}set Position(t){r(s.INVALID_CALL,"setter: `Scene.Position`.")}get Position(){r(s.INVALID_CALL,"getter: `Scene.Position`.")}set Rotation(t){r(s.INVALID_CALL,"setter: `Scene.Rotation`.")}get Rotation(){r(s.INVALID_CALL,"getter: `Scene.Rotation`.")}set Scaling(t){r(s.INVALID_CALL,"setter: `Scene.Scaling`.")}get Scaling(){r(s.INVALID_CALL,"getter: `Scene.Scaling`.")}get LocalMatrix(){r(s.INVALID_CALL,"getter: `Scene.LocalMatrix`.")}}export{A as N,m as S};
