import{U as u}from"./index-C-DjEgL1.js";import{Q as b}from"./Quad-VFYOTGYq.js";var y="@group(0)@binding(0)var<uniform>resolution: vec2f;fn GetClipSpace(position: vec2f)->vec2f{let clipSpace=position/resolution*2-1;return clipSpace*vec2f(1,-1);}",B="struct Video{size: vec2f,time: f32};struct VertexOutput{@location(0)coord: vec2f,@builtin(position)position: vec4f};@group(0)@binding(2)var Sampler: sampler;@group(0)@binding(1)var<uniform>video: Video;@group(0)@binding(3)var Texture: texture_external;@vertex fn vertex(@builtin(vertex_index)index: u32)->VertexOutput {var output: VertexOutput;var coord=GetQuadCoord(index);let offset=vec2f(select(1,0.85,resolution.y<=video.size.y));let position=coord*video.size*offset/resolution;output.position=vec4f(position,0,1);coord=(coord+1.0)*0.5;coord.y=1.0-coord.y;output.coord=coord;return output;}@fragment fn fragment(@location(0)coord: vec2f)->@location(0)vec4f {return vec4f(textureSampleBaseClampToEdge(Texture,Sampler,coord).rgb*(vec3f(cos(video.time),sin(video.time+0.5236),sin(video.time+4.1888))+1)/2,1);}";const V=""+new URL("video-BxXy5_gQ.mp4",import.meta.url).href;/**
 * @example Video Postprocessing
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This example is developed by using a version listed below.
 * Please note that this code may be simplified in future
 * thanks to more recent library APIs.
 * @version 0.0.6
 * @license MIT
 */let a,s;async function P(d){let e;try{e=new(await u.RenderPipeline(d,"Video Postprocessing"))}catch(o){alert(o)}const f=new(await u.Texture()),m=f.CreateSampler(),t=document.createElement("video");let l,c,i;t.muted=t.loop=!0,t.preload="auto",t.src=V,e.CreatePipeline({module:e.CreateShaderModule([b,y,B])}),e.CreatePassDescriptor(e.CreateColorAttachment());function v(){cancelAnimationFrame(a)}async function x(){await S(),g(),a=requestAnimationFrame(p)}function g(){i=new Float32Array(4),c=e.CreateBuffer({size:Float32Array.BYTES_PER_ELEMENT*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),i.set([t.videoWidth,t.videoHeight])}function S(){return new Promise((o,r)=>{if(t.addEventListener("error",r),"requestVideoFrameCallback"in t)t.requestVideoFrameCallback(o);else{const n=()=>t.currentTime?o():requestAnimationFrame(n);n()}t.play().catch(r)})}function p(o){i.set([o*.001],2),a=requestAnimationFrame(p),e.WriteBuffer(c,i);const r=f.ImportExternalTexture(t);e.SetBindGroups(e.CreateBindGroup(e.CreateBindGroupEntries([{buffer:l},{buffer:c},m,r]))),e.Render(6)}s=new ResizeObserver(o=>{for(const r of o){const{inlineSize:n,blockSize:C}=r.contentBoxSize[0];e.SetCanvasSize(n,C),l=e.ResolutionBuffer}v(),x()}),s.observe(d)}function T(){u.OnDeviceLost=()=>{},cancelAnimationFrame(a),s.disconnect(),u.Destroy()}export{T as destroy,P as run};
