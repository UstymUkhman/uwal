var F=r=>{throw TypeError(r)};var v=(r,e,n)=>e.has(r)||F("Cannot "+n);var u=(r,e,n)=>(v(r,e,"read from private field"),n?n.call(r):e.get(r)),d=(r,e,n)=>e.has(r)?F("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(r):e.set(r,n),o=(r,e,n,i)=>(v(r,e,"write to private field"),i?i.call(r,n):e.set(r,n),n);import{U as B,F as L}from"./index-D9QQZyze.js";import{S as q,a as W}from"./Shape-GCE53TKf.js";var c,f,l,p;class j{constructor(e=0,n,i,s=255){d(this,c,0);d(this,f,0);d(this,l,0);d(this,p,1);typeof n=="number"&&typeof i=="number"?this.RGBA=[e,n,i,s]:(o(this,c,(e>>16&255)/255),o(this,f,(e>>8&255)/255),o(this,l,(e&255)/255),o(this,p,s/255))}set rgb(e){o(this,c,e[0]),o(this,f,e[1]),o(this,l,e[2]),o(this,p,e[3]??1)}get rgb(){return[u(this,c),u(this,f),u(this,l)]}set rgba(e){this.rgb=e}get rgba(){return this.rgb.concat(u(this,p))}set RGB(e){o(this,c,e[0]/255),o(this,f,e[1]/255),o(this,l,e[2]/255),o(this,p,(e[3]??255)/255)}get RGB(){return[u(this,c)*255,u(this,f)*255,u(this,l)*255]}set RGBA(e){this.RGB=e}get RGBA(){return this.RGB.concat(u(this,p)*255)}}c=new WeakMap,f=new WeakMap,l=new WeakMap,p=new WeakMap;const X=""+new URL("logo-DEvozEyj.jpg",import.meta.url).href;var k="struct VertexOutput{@location(0)textureCoord: vec2f,@builtin(position)position: vec4f,@location(1)@interpolate(flat)instance: u32};@group(1)@binding(0)var Sampler: sampler;@group(1)@binding(1)var Texture: texture_2d<f32>;@group(1)@binding(2)var<storage,read>visible: array<u32>;@vertex fn mainVertex(@location(0)position: vec2f,@location(1)translation: vec2f,@builtin(instance_index)instance: u32)->VertexOutput{var output: VertexOutput;let aspect=resolution/resolution.y;let clipSpace=GetVertexClipSpace(position).xy;output.position=vec4f(clipSpace+translation,0,1);output.textureCoord=clipSpace*aspect*2.5+0.5;output.instance=instance;return output;}@fragment fn fragment(@location(0)textureCoord: vec2f,@location(1)@interpolate(flat)instance: u32)->@location(0)vec4f{if(visible[instance]==0){discard;}return textureSample(Texture,Sampler,textureCoord);}";/**
 * @example Texture Instancing
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This example is developed by using a version listed below.
 * Please note that this code may be simplified in future
 * thanks to more recent library APIs.
 * @version 0.0.5
 * @license MIT
 */let m,C;async function Q(r){let e;try{e=new(await B.RenderPipeline(r,"Texture Instancing"))}catch(t){alert(t)}const n=128,i=100;let s,h,b,R,x,g=500,S=performance.now()-g;const y=e.CreateShaderModule([q,k]),_=e.CreateColorAttachment();_.clearValue=new j(1651532).rgba,e.CreatePassDescriptor(_),e.CreatePipeline({fragment:e.CreateFragmentState(y),vertex:e.CreateVertexState(y,"mainVertex",[{arrayStride:Float32Array.BYTES_PER_ELEMENT*2,attributes:[e.CreateVertexBufferAttribute("float32x2")]},{stepMode:"instance",arrayStride:Float32Array.BYTES_PER_ELEMENT*2,attributes:[e.CreateVertexBufferAttribute("float32x2",1)]}])});function M(){cancelAnimationFrame(m),clearTimeout(R),S=performance.now()-g}async function V(){N(),Y(),I(),await D(),requestAnimationFrame(U),R=setTimeout(()=>g=~(x=-1),g*3)}function N(){const t=new W({renderer:e,segments:4,radius:n});t.Position=[r.width/2,r.height/2],t.Rotation=Math.PI/4,b=t.Update().Vertices}function Y(){const t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST,a=Uint32Array.BYTES_PER_ELEMENT*i;s=new Uint32Array(a/Uint32Array.BYTES_PER_ELEMENT),h=e.CreateBuffer({size:a,usage:t}),e.WriteBuffer(h,s)}function I(){const t=1-Math.sqrt(2)*n/r.height,a=1-Math.sqrt(2)*n/r.width,E=Float32Array.BYTES_PER_ELEMENT*2,T=E*i,z=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,P=e.CreateBuffer({size:T,usage:z}),O=E/Float32Array.BYTES_PER_ELEMENT,G=new Float32Array(T/Float32Array.BYTES_PER_ELEMENT);for(let w=i;w--;)G.set([A(-a,a),A(-t,t)],O*w);e.WriteBuffer(P,G),e.AddVertexBuffers(P)}async function D(){const t=new(await B.Texture()),a=await t.CreateBitmapImage(await(await fetch(X)).blob(),{colorSpaceConversion:"none"}),E=t.CopyImageToTexture(a,{flipY:!0,create:{usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST,format:"rgba8unorm"}});e.AddBindGroups(e.CreateBindGroup(e.CreateBindGroupEntries([t.CreateSampler({magFilter:L.LINEAR,minFilter:L.LINEAR}),E.createView(),{buffer:h}]),1))}function A(t,a){return t===void 0?(t=0,a=1):a===void 0&&(a=t,t=0),Math.random()*(a-t)+t}function U(t){m=requestAnimationFrame(U),!(t-S<g)&&(g?s.fill(0)&&(x=A(s.length)|0):++x===s.length-1&&cancelAnimationFrame(m),S=t,s[x]=1,e.WriteBuffer(h,s),e.Render([b,i]))}C=new ResizeObserver(t=>{for(const a of t){const{inlineSize:E,blockSize:T}=a.contentBoxSize[0];e.SetCanvasSize(E,T)}M(),V()}),C.observe(r)}function Z(){B.OnDeviceLost=()=>{},cancelAnimationFrame(m),C.disconnect(),B.Destroy()}export{Z as destroy,Q as run};
