import{a as W,T as Y,E as q,D as L,F as N,C as H}from"./index-ELOcnE7E.js";import{m as o,v as M,M as a}from"./Math-Cr7J2GA5.js";class T{Children=[];Label;#e=null;RotationOrder="XYZ";TransformationOrder="TRS";#t=o.identity();#r=o.identity();#i=M.set(1,1,1);#s=M.create();#o=M.create();constructor(t,e=null){this.Label=t,this.Parent=e}Add(t){t=W(t),t.forEach(e=>e.Parent=this)}Remove(t){t=W(t),t.forEach(e=>e.Parent=null)}Find(t){if(this.Label===t)return this;for(const e=0,i=this.Children.length;e<i;e++){const r=this.Children[e].Find(t);if(r)return r}return null}ResetLocalMatrix(){this.#t=o.identity()}UpdateWorldMatrix(){this.#a(),this.#e?o.multiply(this.#e.WorldMatrix,this.#t,this.#r):o.copy(this.#t,this.#r),this.Children.forEach(t=>t.UpdateWorldMatrix())}#a(){const t=this.TransformationOrder.split("");for(let e=0,i=t.length;e<i;e++)switch(t[e]){case"T":o.translation(this.#s,this.#t);break;case"R":for(let r=0,h=this.RotationOrder.length;r<h;++r){const s=this.RotationOrder[r],c=this.#o[s.charCodeAt()-88];o[`rotate${s}`](this.#t,c,this.#t)}break;case"S":o.scale(this.#t,this.#i,this.#t);break}}Translate(t){o.translate(this.#t,t,this.#t)}RotateAxis(t,e){o.rotate(this.#t,t,e,this.#t)}RotateX(t){o.rotateX(this.#t,t,this.#t)}RotateY(t){o.rotateY(this.#t,t,this.#t)}RotateZ(t){o.rotateZ(this.#t,t,this.#t)}Scale(t){o.scale(this.#t,t,this.#t)}set Transform(t){const[e,i,r]=t,h=this.TransformationOrder.split("");for(let s=0,c=h.length;s<c;s++)switch(h[s]){case"T":e&&(this.Position=e);break;case"R":i&&(this.Rotation=i);break;case"S":r&&(this.Scaling=r);break}}set Position(t){M.copy(t,this.#s),o.translation(t,this.#t)}get Position(){return this.#s}set Rotation(t){M.copy(t,this.#o);for(let e=0,i=this.RotationOrder.length;e<i;++e){const r=this.RotationOrder[e],h=t[r.charCodeAt()-88];o[`rotate${r}`](this.#t,h,this.#t)}}get Rotation(){return this.#o}set Scaling(t){M.copy(t,this.#i),o.scale(this.#t,t,this.#t)}get Scaling(){return this.#i}get LocalMatrix(){return this.#t}get WorldMatrix(){return this.#r}set Parent(t){if(this.#e){const e=this.#e.Children.indexOf(this);0<=e&&this.#e.Children.splice(e,1)}t&&t.Children.push(this),this.#e=t}get Parent(){return this.#e}}let E=class extends T{#e;#t;#r;#i;#s;#o;constructor(t,e,i="Mesh",r=null){super(i,r),this.#e=t,this.#s=e}SetRenderPipeline(t,e=!0){this.#t=t,this.#e.CreateBuffers(t),this.#s?.CreateColorBuffer(t),this.#a(e)}#a(t=!0,e){const{projection:i,buffer:r}=this.#t.CreateUniformBuffer("projection",{label:`${this.Label} Projection Buffer`,...e});this.#i=o.identity(i),this.#r=r,t&&(this.#o=[r,this.#s?.ColorBuffer].filter(Boolean),this.#t.SetBindGroupFromResources(this.#o,0,0,`${this.Label} Bind Group`))}Update(t){const e=this.Parent&&this.WorldMatrix||this.LocalMatrix;o.multiply(t,e,this.#i),this.#t.WriteBuffer(this.#r,this.#i)}SetPipelineData(){!this.#t&&Y(q.PIPELINE_NOT_FOUND,"RenderPipeline.\n            Call `Mesh.SetRenderPipeline` method before setting its data."),this.#t.SetBindGroupFromResources(this.#o);const{VertexBuffer:t,IndexBuffer:e,Vertices:i}=this.#e;this.#t.SetVertexBuffers(t),this.#t.SetIndexBuffer(...e),this.#t.SetDrawParams(i)}get ProjectionBuffer(){return this.#r}get ProjectionMatrix(){return this.#i}get Geometry(){return this.#e}get Material(){return this.#s}Destroy(){this.#e.Destroy(),this.#s?.Destroy(),this.#t=void 0,this.#r.destroy(),this.#r=void 0,this.#o?.splice(0)}};var X="@group(0)@binding(0)var<uniform>projection: mat4x4f;fn GetVertexClipSpace(position: vec4f)->vec4f{return projection*position;}@vertex fn vertex(@location(0)position: vec4f)->@builtin(position)vec4f {return GetVertexClipSpace(position);}";class Z{#e;Label;IndexFormat;#t;#r;constructor(t="Mesh",e){this.IndexFormat=e,this.Label=t}CreateVertexBuffer(t,e,i=this.Label){this.#r=t.CreateVertexBuffer(e,{label:`${i} Vertex Buffer`}),t.WriteBuffer(this.#r,e),t.SetVertexBuffers(this.#r)}CreateIndexBuffer(t,e,i=this.Label){this.#t=t.CreateIndexBuffer(e,{label:`${i} Index Buffer`}),this.#t=t.CreateIndexBuffer(e,{label:`${i} Index Buffer`}),t.SetDrawParams(this.#e=e.length),t.WriteBuffer(this.#t,e),t.SetIndexBuffer(...this.IndexBuffer)}get VertexBuffer(){return this.#r}get IndexBuffer(){return[this.#t,this.IndexFormat]}get Vertices(){return this.#e}Destroy(){this.#t?.destroy(),this.#r?.destroy()}}class J extends Z{#e;#t;constructor(t="Cube"){super(t,"uint16")}GetPositionBufferLayout(t,e={name:"position",format:"float32x3"},i="vertex",r="vertex"){return t.CreateVertexBufferLayout(e,i,r)}CreateTextureCoordsBuffer(t,e,i="vertex",r="vertex"){!Array.isArray(e)&&e?.name,e??="textureCoords";const h=new Float32Array([.5,.5,.75,.5,.5,1,.75,1,.25,.5,.5,.5,.25,1,.5,1,0,0,0,.5,.25,0,.25,.5,.5,0,.5,.5,.75,0,.75,.5,0,.5,.25,.5,0,1,.25,1,.25,0,.5,0,.25,.5,.5,.5]);return this.AddVertexBuffer(t,h,e,i,r)}AddVertexBuffer(t,e,i,r="vertex",h="vertex"){const{buffer:s,layout:c}=t.CreateVertexBuffer(i,this.Vertices,r,h);return t.WriteBuffer(s,e),t.AddVertexBuffers(s),{buffer:s,layout:c}}#r(t,e=this.Label){super.CreateVertexBuffer(t,this.#t??new Float32Array([-.5,.5,.5,.5,.5,.5,-.5,.5,-.5,.5,.5,-.5,.5,-.5,.5,-.5,-.5,.5,.5,-.5,-.5,-.5,-.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,.5,.5,.5,-.5,.5,.5,.5,-.5,.5,-.5,-.5,-.5,.5,-.5,-.5,-.5,-.5,-.5,.5,.5,-.5,.5,-.5,-.5,-.5,.5,-.5,-.5,-.5,.5,.5,-.5,.5,.5,.5,.5,-.5,-.5,.5,-.5,.5]),e)}#i(t,e=this.Label){super.CreateIndexBuffer(t,this.#e??new Uint16Array([0,1,2,2,1,3,4,5,6,6,5,7,8,9,10,10,9,11,12,13,14,14,13,15,16,17,18,18,17,19,20,21,22,22,21,23]),e)}CreateBuffers(t,e=this.Label){this.#r(t,e),this.#i(t,e)}set VertexData(t){this.#t=t}set IndexData(t){this.#e=t}get Vertices(){return(this.#t&&this.#t.length/3)??this.#e?.length??super.Vertices??24}Destroy(){super.Destroy(),this.#e=void 0,this.#t=void 0}}class K extends T{#e=1;#t=1e3;#r=0;#i=innerWidth;#s=innerHeight;#o=0;#a=o.identity();constructor(t=1,e=1e3,i=0,r=innerWidth,h=innerHeight,s=0){if(super("OrthographicCamera"),this.#e=t,this.#t=e,this.#r=i,this.#o=s,typeof r!="number"){const[c,x]=r.CanvasSize;this.#i=c,this.#s=x}else this.#i=r,this.#s=h;this.UpdateProjectionMatrix()}UpdateProjectionMatrix(){return o.ortho(this.#o,this.#i,this.#s,this.#r,this.#e,this.#t,this.#a)}ResetProjectionMatrix(){this.#a=o.identity()}get ProjectionMatrix(){return this.#a}set Near(t){this.#e=t,this.UpdateProjectionMatrix()}get Near(){return this.#e}set Far(t){this.#t=t,this.UpdateProjectionMatrix()}get Far(){return this.#t}set Top(t){this.#r=t,this.UpdateProjectionMatrix()}get Top(){return this.#r}set Right(t){this.#i=t,this.UpdateProjectionMatrix()}get Right(){return this.#i}set Bottom(t){this.#s=t,this.UpdateProjectionMatrix()}get Bottom(){return this.#s}set Left(t){this.#o=t,this.UpdateProjectionMatrix()}get Left(){return this.#o}}class Q extends T{#e=M.set(0,1,0);#t=60;#r=1;#i=1e3;#s=innerWidth/innerHeight;#o=o.identity();#a=o.identity();#n=o.identity();constructor(t=60,e=1,i=1e3,r=innerWidth/innerHeight){super("PerspectiveCamera"),this.#t=t,this.#r=e,this.#i=i,this.#s=typeof r!="number"?r.AspectRatio:r,this.UpdateProjectionMatrix()}UpdateViewProjectionMatrix(t=!0){return t&&o.inverse(this.LocalMatrix,this.#o),o.multiply(this.#a,this.#o,this.#n)}UpdateProjectionMatrix(){const t=a.DegreesToRadians(this.#t);return o.perspective(t,this.#s,this.#r,this.#i,this.#a)}ResetProjectionMatrix(){this.#a=o.identity()}LookAt(t,e=this.#e){o.lookAt(this.Position,t,e,this.#o)}get ViewProjectionMatrix(){return this.#n}get ProjectionMatrix(){return this.#a}set FieldOfView(t){this.#t=t,this.UpdateProjectionMatrix()}get FieldOfView(){return this.#t}set Near(t){this.#r=t,this.UpdateProjectionMatrix()}get Near(){return this.#r}set Far(t){this.#i=t,this.UpdateProjectionMatrix()}get Far(){return this.#i}set AspectRatio(t){this.#s=typeof t!="number"?t.AspectRatio:t,this.UpdateProjectionMatrix()}get AspectRatio(){return this.#s}}const tt=""+new URL("dice-Vcs4qiRq.jpg",import.meta.url).href;var et="struct VertexOutput{@location(0)textureCoords: vec2f,@builtin(position)position: vec4f};@group(0)@binding(1)var Sampler: sampler;@group(0)@binding(2)var Texture: texture_2d<f32>;@vertex fn cubeVertex(@location(0)position: vec4f,@location(1)textureCoords: vec2f)->VertexOutput {return VertexOutput(textureCoords,GetVertexClipSpace(position));}@fragment fn cubeFragment(@location(0)textureCoords: vec2f)->@location(0)vec4f {return textureSample(Texture,Sampler,textureCoords);}";/**
 * @example Cube / Cameras
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This example is developed by using a version listed below.
 * Please note that this code may be simplified in future
 * thanks to more recent library APIs.
 * @version 0.2.0
 * @license MIT
 */let b,f,I,w;async function ot(C){try{f=new(await L.Renderer(C,"Cube / Cameras"))}catch(p){alert(p)}let t,e,i,r=1/0;const h=new J,s=new f.Pipeline,c=a.Vec3.create(),x=new E(h),P=new E(h),v=new Q,S=new K,A=a.Vec3.create(),j=a.Vec3.create(),g=a.Vec3.create(),l=a.Vec3.create(),F=a.Vec3.create(),U=s.CreateShaderModule([X,et]),{buffer:O,layout:z}=h.CreateTextureCoordsBuffer(s,void 0,void 0,"cubeVertex");await f.AddPipeline(s,{primitive:s.CreatePrimitiveState(),fragment:s.CreateFragmentState(U,void 0,void 0,"cubeFragment"),multisample:s.CreateMultisampleState(),depthStencil:s.CreateDepthStencilState(),vertex:s.CreateVertexState(U,[h.GetPositionBufferLayout(s),z],void 0,"cubeVertex")}),P.SetRenderPipeline(s,!1),x.SetRenderPipeline(s,!1);const R=new(await L.Texture(f)),k=await R.CreateImageBitmap(tt);I=await R.CopyImageToTexture(k),s.SetBindGroupFromResources([x.ProjectionBuffer,R.CreateSampler({filter:N.LINEAR}),I.createView()]),s.AddBindGroupFromResources([P.ProjectionBuffer,R.CreateSampler({filter:N.LINEAR}),I.createView()]),f.CreatePassDescriptor(f.CreateColorAttachment(new H(1657907)),f.CreateDepthStencilAttachment()),s.AddVertexBuffers(O),s.AddVertexBuffers(O);function $(){r=1/0,clearTimeout(i),cancelAnimationFrame(b)}function D(){i=setTimeout(()=>{const p=-t||0,n=a.RandomInt(-2,2)||1/0,u=a.RandomInt(-2,2)||1/0,d=a.RandomInt(-2,2)||1/0;g[0]=Math.PI/n,g[1]=Math.PI/u,g[2]=Math.PI/d,l[0]=Math.PI/n+t,l[1]=!isFinite(n)&&t||Math.abs(n)<2&&p,l[2]=Math.abs(n)===2&&Math.sign(n)*p,l[1]&&=l[1]+Math.PI/u,l[2]&&=l[2]+Math.PI/d,r=Date.now()},1e3)}function G(p){b=requestAnimationFrame(G),p=(Date.now()-r)/1e3;const n=a.SmoothStep(p);let u=a.SmootherStep(p*2);.5<=n&&(u=(.5-(n-.5))*2,n===1&&(a.Vec3.copy(g,F),a.Vec3.copy(l,j),r=1/0,D()));{const[d,B,y]=F;c[0]=a.Lerp(d,g[0],n),c[1]=a.Lerp(B,g[1],n),c[2]=a.Lerp(y,g[2],n),x.Transform=[[0,a.Lerp(0,4,u),0],c],x.UpdateWorldMatrix(),x.Update(v.ViewProjectionMatrix),s.SetActiveBindGroups(0),f.Render(!1)}{const[d,B,y]=A,[m,V,_]=j;c[0]=a.Lerp(m,l[0],n),c[1]=a.Lerp(V,l[1],n),c[2]=a.Lerp(_,l[2],n),P.Transform=[[d,a.Lerp(B,e,u),y],c],P.UpdateWorldMatrix(),P.Update(S.ProjectionMatrix),s.SetActiveBindGroups(1),f.Render()}}w=new ResizeObserver(p=>{for(const n of p){let{inlineSize:u,blockSize:d}=n.contentBoxSize[0];u=u<=960&&u||u-240,f.SetCanvasSize(u,d),f.MultisampleTexture=R.CreateMultisampleTexture(),v.AspectRatio=f.AspectRatio,v.Position=[u/360,2,8],v.UpdateViewProjectionMatrix(),S.Bottom=d,S.Right=u,S.Near=-100;const B=d-d/3.6,y=(u-360)/1320;t=y*.2+.1,e=B*.39;const m=y+1;x.Scaling=[m,m,m];const V=(1-(d-1e3)/-400)*36+72;P.Scaling=[V*m,V*m,V*m],a.Vec3.set(.2,t,0,j),a.Vec3.set(u-(y*250+100),B,0,A)}$(),D(),b=requestAnimationFrame(G)}),w.observe(document.body)}function at(){L.OnLost=()=>{},cancelAnimationFrame(b),w.disconnect(),f.Destroy(),L.Destroy(void 0,I)}export{at as destroy,ot as run};
