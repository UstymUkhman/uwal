import{C as $,G as z,a as k,m as v,T as Y,E as J,b as K,v as Q,M as n,D,F as W}from"./index-vi7ojKh9.js";import{N as G,S as X}from"./Scene-BNNJPF7q.js";var Z="@group(0)@binding(0)var<uniform>projection: mat4x4f;fn GetVertexClipSpace(position: vec4f)->vec4f{return projection*position;}@vertex fn vertex(@location(0)position: vec4f)->@builtin(position)vec4f {return GetVertexClipSpace(position);}";let tt=class{#r;#e;#i;Transparent=!1;#s=crypto.randomUUID();#o;#n;#t=new $(0,0);constructor(t=16777215,e="Mesh"){this.Color=t,this.#r=e}CreateColorBuffer(t,e=this.#r){const{color:i,buffer:r}=t.CreateUniformBuffer("color",{label:`${e} Color Buffer`});this.#e=i,this.#i=t,this.#n=r,this.#e.set(this.#o),t.WriteBuffer(r,i)}SetBlendConstant(t){if(!t?.BlendConstant||!this.#t.Equals(t.BlendConstant))return this.#i.BlendConstant=this.#t}set BlendConstant(t){typeof t=="number"&&this.#t.Set(t)||(this.#t.rgba=z(t))}get BlendConstant(){return this.#t}get ColorBuffer(){return this.#n}set Color(t){this.#o=typeof t=="number"&&k(t)||z(t),this.#e?.fill(1).set(this.#o),this.#i?.WriteBuffer(this.#n,this.#e)}get Color(){return this.#o}get ID(){return this.#s}Destroy(){this.#i=void 0,this.#n?.destroy(),this.#n=void 0}},E=class extends G{#r;Visible=!0;#e;#i;#s;#o=[];constructor(t,e,i="Mesh",r=null){super(i,r),this.#r=t,this.#i=e===void 0&&new tt||e}SetRenderPipeline(t,e){this.#e=t,this.#r.CreateBuffers(t),this.#i?.CreateColorBuffer(t),this.#n(e)}#n(t,e){const{projection:i,buffer:r}=this.#e.CreateUniformBuffer("projection",{label:`${this.Label} Projection Buffer`,...e});this.ProjectionMatrix=v.identity(i),this.#s=r,t=K(t),this.#o=this.#e.SetBindGroupFromResources([r,this.#i?.ColorBuffer,...t].filter(Boolean),0,0,`${this.Label} Bind Group`)}UpdateProjectionMatrix(t){const e=super.UpdateProjectionMatrix(t);this.#e.WriteBuffer(this.#s,e)}SetBindGroups(){!this.#e&&Y(J.PIPELINE_NOT_FOUND,"RenderPipeline.\n            Call `Mesh.SetRenderPipeline` method before setting its data."),this.#e.BindGroups=this.#o}get ProjectionBuffer(){return this.#s}get Geometry(){return this.#r}get Material(){return this.#i}get Pipeline(){return this.#e}Destroy(){this.#r.Destroy(),this.#i?.Destroy(),this.#e=void 0,this.#o.splice(0),this.#s.destroy(),this.#s=void 0}};class et{#r;Label;IndexFormat;#e=crypto.randomUUID();VertexBuffers;IndexBuffer;constructor(t="Mesh",e){this.IndexFormat=e,this.Label=t}CreateVertexBuffer(t,e,i=this.Label){const r=t.CreateVertexBuffer(e,{label:`${i} Vertex Buffer`});this.VertexBuffers=t.SetVertexBuffers(r),t.WriteBuffer(r,e)}CreateIndexBuffer(t,e,i=this.Label){const r=t.CreateIndexBuffer(e,{label:`${i} Index Buffer`});this.IndexBuffer=t.SetIndexBuffer(r,this.IndexFormat),t.SetDrawParams(this.#r=e.length),t.WriteBuffer(r,e)}get Vertices(){return this.#r}get ID(){return this.#e}Destroy(){this.IndexBuffer?.buffer.destroy(),this.IndexBuffer=void 0,this.VertexBuffers&&(this.VertexBuffers[0]?.buffer.destroy(),this.VertexBuffers.splice(0),this.VertexBuffers=void 0)}}class rt extends et{#r;#e;constructor(t="Cube"){super(t,"uint16")}GetPositionBufferLayout(t,e={name:"position",format:"float32x3"},i="vertex",r="vertex"){return t.CreateVertexBufferLayout(e,i,r)}CreateTextureCoordsBuffer(t,e,i="vertex",r="vertex"){!Array.isArray(e)&&e?.name,e??="textureCoords";const c=new Float32Array([.5,.5,.75,.5,.5,1,.75,1,.25,.5,.5,.5,.25,1,.5,1,0,0,0,.5,.25,0,.25,.5,.5,0,.5,.5,.75,0,.75,.5,0,.5,.25,.5,0,1,.25,1,.25,0,.5,0,.25,.5,.5,.5]);return this.AddVertexBuffer(t,c,e,i,r)}AddVertexBuffer(t,e,i,r="vertex",c="vertex"){const{buffer:s,layout:h}=t.CreateVertexBuffer(i,this.Vertices,r,c);return this.VertexBuffers=t.AddVertexBuffers(s),t.WriteBuffer(s,e),{buffer:s,layout:h}}#i(t,e=this.Label){super.CreateVertexBuffer(t,this.#e??new Float32Array([-.5,.5,.5,.5,.5,.5,-.5,.5,-.5,.5,.5,-.5,.5,-.5,.5,-.5,-.5,.5,.5,-.5,-.5,-.5,-.5,-.5,-.5,.5,.5,-.5,-.5,.5,.5,.5,.5,.5,-.5,.5,.5,.5,-.5,.5,-.5,-.5,-.5,.5,-.5,-.5,-.5,-.5,-.5,.5,.5,-.5,.5,-.5,-.5,-.5,.5,-.5,-.5,-.5,.5,.5,-.5,.5,.5,.5,.5,-.5,-.5,.5,-.5,.5]),e)}#s(t,e=this.Label){super.CreateIndexBuffer(t,this.#r??new Uint16Array([0,1,2,2,1,3,4,5,6,6,5,7,8,9,10,10,9,11,12,13,14,14,13,15,16,17,18,18,17,19,20,21,22,22,21,23]),e)}CreateBuffers(t,e=this.Label){this.#i(t,e),this.#s(t,e)}set VertexData(t){this.#e=t}set IndexData(t){this.#r=t}get Vertices(){return(this.#e&&this.#e.length/3)??this.#r?.length??super.Vertices??24}Destroy(){super.Destroy(),this.#r=void 0,this.#e=void 0}}class it extends G{#r=1;#e=1e3;#i=0;#s=innerWidth;#o=innerHeight;#n=0;#t=new Float32Array(24);constructor(t=1,e=1e3,i=0,r=innerWidth,c=innerHeight,s=0){if(super("OrthographicCamera"),this.#r=t,this.#e=e,this.#i=i,this.#n=s,typeof r!="number"){const[h,x]=r.CanvasSize;this.#s=h,this.#o=x}else this.#s=r,this.#o=c;this.UpdateProjectionMatrix()}#a(t=!1){const[e,i,r,c,s,h,x,V,I,b,B,y,a,o,l,d]=this.ProjectionMatrix;if(this.#t[0]=a+I,this.#t[1]=o+b,this.#t[2]=l+B,this.#t[3]=d+y,this.#t[4]=a-I,this.#t[5]=o-b,this.#t[6]=l-B,this.#t[7]=d-y,this.#t[8]=a-s,this.#t[9]=o-h,this.#t[10]=l-x,this.#t[11]=d-V,this.#t[12]=a-e,this.#t[13]=o-i,this.#t[14]=l-r,this.#t[15]=d-c,this.#t[16]=a+s,this.#t[17]=o+h,this.#t[18]=l+x,this.#t[19]=d+V,this.#t[20]=a+e,this.#t[21]=o+i,this.#t[22]=l+r,this.#t[23]=d+c,!t)return this.#t;for(let M=0;M<6;++M){const f=M*4,m=Math.hypot(this.#t[f+0],this.#t[f+1],this.#t[f+2])||1;this.#t[f+0]/=m,this.#t[f+1]/=m,this.#t[f+2]/=m,this.#t[f+3]/=m}return this.#t}UpdateProjectionMatrix(){return v.ortho(this.#n,this.#s,this.#o,this.#i,this.#r,this.#e,this.ProjectionMatrix),this.#a(),this.ProjectionMatrix}get Frustum(){return this.#t}set Near(t){this.#r=t,this.UpdateProjectionMatrix()}get Near(){return this.#r}set Far(t){this.#e=t,this.UpdateProjectionMatrix()}get Far(){return this.#e}set Top(t){this.#i=t,this.UpdateProjectionMatrix()}get Top(){return this.#i}set Right(t){this.#s=t,this.UpdateProjectionMatrix()}get Right(){return this.#s}set Bottom(t){this.#o=t,this.UpdateProjectionMatrix()}get Bottom(){return this.#o}set Left(t){this.#n=t,this.UpdateProjectionMatrix()}get Left(){return this.#n}}class st extends G{#r=Q.set(0,1,0);#e=60;#i=1;#s=1e3;#o=innerWidth/innerHeight;#n=v.identity();#t=new Float32Array(24);#a=v.identity();constructor(t=60,e=1,i=1e3,r=innerWidth/innerHeight){super("PerspectiveCamera"),this.#e=t,this.#i=e,this.#s=i,this.#o=typeof r!="number"?r.AspectRatio:r,this.UpdateProjectionMatrix()}#h(t=!1){const[e,i,r,c,s,h,x,V,I,b,B,y,a,o,l,d]=this.#a;if(this.#t[0]=a+I,this.#t[1]=o+b,this.#t[2]=l+B,this.#t[3]=d+y,this.#t[4]=a-I,this.#t[5]=o-b,this.#t[6]=l-B,this.#t[7]=d-y,this.#t[8]=a-s,this.#t[9]=o-h,this.#t[10]=l-x,this.#t[11]=d-V,this.#t[12]=a-e,this.#t[13]=o-i,this.#t[14]=l-r,this.#t[15]=d-c,this.#t[16]=a+s,this.#t[17]=o+h,this.#t[18]=l+x,this.#t[19]=d+V,this.#t[20]=a+e,this.#t[21]=o+i,this.#t[22]=l+r,this.#t[23]=d+c,!t)return this.#t;for(let M=0;M<6;++M){const f=M*4,m=Math.hypot(this.#t[f+0],this.#t[f+1],this.#t[f+2])||1;this.#t[f+0]/=m,this.#t[f+1]/=m,this.#t[f+2]/=m,this.#t[f+3]/=m}return this.#t}UpdateViewProjectionMatrix(){return v.inverse(this.LocalMatrix,this.#n),v.multiply(this.ProjectionMatrix,this.#n,this.#a),this.#h(),this.#a}UpdateProjectionMatrix(){const t=n.DegreesToRadians(this.#e);return v.perspective(t,this.#o,this.#i,this.#s,this.ProjectionMatrix)}LookAt(t,e=this.#r){return v.lookAt(this.Position,t,e,this.#n),v.multiply(this.ProjectionMatrix,this.#n,this.#a)}set AspectRatio(t){this.#o=typeof t!="number"?t.AspectRatio:t,this.UpdateProjectionMatrix()}get AspectRatio(){return this.#o}get ViewProjectionMatrix(){return this.#a}set FieldOfView(t){this.#e=t,this.UpdateProjectionMatrix()}get FieldOfView(){return this.#e}set Near(t){this.#i=t,this.UpdateProjectionMatrix()}get Near(){return this.#i}set Far(t){this.#s=t,this.UpdateProjectionMatrix()}get Far(){return this.#s}get Frustum(){return this.#t}}const ot=""+new URL("dice-Vcs4qiRq.jpg",import.meta.url).href;var nt="struct VertexOutput{@location(0)textureCoords: vec2f,@builtin(position)position: vec4f};@group(0)@binding(1)var Sampler: sampler;@group(0)@binding(2)var Texture: texture_2d<f32>;@vertex fn cubeVertex(@location(0)position: vec4f,@location(1)textureCoords: vec2f)->VertexOutput {return VertexOutput(textureCoords,GetVertexClipSpace(position));}@fragment fn fragment(@location(0)textureCoords: vec2f)->@location(0)vec4f {return textureSample(Texture,Sampler,textureCoords);}";/**
 * @example Cube / Cameras
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This example is developed by using a version listed below.
 * Please note that this code may be simplified in future
 * thanks to more recent library APIs.
 * @version 0.2.0
 * @license MIT
 */let U,C,A,T;const w=new X;async function ct(R){try{C=new(await D.Renderer(R,"Cube / Cameras"))}catch(P){alert(P)}let t,e,i,r=1/0;const c=new rt,s=new C.Pipeline,h=n.Vec3.create(),x=new st,V=new it,I=n.Vec3.create(),b=n.Vec3.create(),B=new E(c,null),y=new E(c,null),a=n.Vec3.create(),o=n.Vec3.create(),l=n.Vec3.create(),d=s.CreateShaderModule([Z,nt]),{buffer:M,layout:f}=c.CreateTextureCoordsBuffer(s,void 0,void 0,"cubeVertex");await C.AddPipeline(s,{primitive:s.CreatePrimitiveState(),fragment:s.CreateFragmentState(d),multisample:s.CreateMultisampleState(),depthStencil:s.CreateDepthStencilState(),vertex:s.CreateVertexState(d,[c.GetPositionBufferLayout(s),f],void 0,"cubeVertex")});const m=new(await D.Texture(C)),_=await m.CreateImageBitmap(ot);A=await m.CopyImageToTexture(_),y.SetRenderPipeline(s,[m.CreateSampler({filter:W.LINEAR}),A.createView()]),B.SetRenderPipeline(s,[m.CreateSampler({filter:W.LINEAR}),A.createView()]),C.CreatePassDescriptor(C.CreateColorAttachment(new $(1657907)),C.CreateDepthStencilAttachment()),s.AddVertexBuffers(M),s.AddVertexBuffers(M),w.Add([B,y]),w.AddCamera(V),w.AddCamera(x);function q(){r=1/0,clearTimeout(i),cancelAnimationFrame(U)}function N(){i=setTimeout(()=>{const P=-t||0,u=n.RandomInt(-2,2)||1/0,p=n.RandomInt(-2,2)||1/0,g=n.RandomInt(-2,2)||1/0;a[0]=Math.PI/u,a[1]=Math.PI/p,a[2]=Math.PI/g,o[0]=Math.PI/u+t,o[1]=!isFinite(u)&&t||Math.abs(u)<2&&P,o[2]=Math.abs(u)===2&&Math.sign(u)*P,o[1]&&=o[1]+Math.PI/p,o[2]&&=o[2]+Math.PI/g,r=Date.now()},1e3)}function O(P){U=requestAnimationFrame(O),P=(Date.now()-r)/1e3;const u=n.SmoothStep(P);let p=n.SmootherStep(P*2);.5<=u&&(p=(.5-(u-.5))*2,u===1&&(n.Vec3.copy(a,l),n.Vec3.copy(o,b),r=1/0,N()));{const[g,L,j]=l;h[0]=n.Lerp(g,a[0],u),h[1]=n.Lerp(L,a[1],u),h[2]=n.Lerp(j,a[2],u),B.Transform=[[0,n.Lerp(0,4,p),0],h],B.Visible=!(y.Visible=!1),w.MainCamera=x,C.Render(w,!1)}{const[g,L,j]=I,[S,F,H]=b;h[0]=n.Lerp(S,o[0],u),h[1]=n.Lerp(F,o[1],u),h[2]=n.Lerp(H,o[2],u),y.Transform=[[g,n.Lerp(L,e,p),j],h],y.Visible=!(B.Visible=!1),w.MainCamera=V,C.Render(w)}}T=new ResizeObserver(P=>{for(const u of P){let{inlineSize:p,blockSize:g}=u.contentBoxSize[0];p=p<=960&&p||p-240,C.SetCanvasSize(p,g),x.ResetLocalMatrix(),V.Bottom=g,V.Right=p,V.Near=-100,C.MultisampleTexture=m.CreateMultisampleTexture(),x.AspectRatio=C.AspectRatio,x.Position=[p/360,2,8],x.UpdateViewProjectionMatrix();const L=g-g/3.6,j=(p-360)/1320;t=j*.2+.1,e=L*.39;const S=j+1;B.Scaling=[S,S,S];const F=(1-(g-1e3)/-400)*36+72;y.Scaling=[F*S,F*S,F*S],n.Vec3.set(.2,t,0,b),n.Vec3.set(p-(j*250+100),L,0,I)}q(),N(),U=requestAnimationFrame(O)}),T.observe(document.body)}function lt(){D.OnLost=()=>{},cancelAnimationFrame(U),T.disconnect(),C.Destroy(),w.Destroy(),D.Destroy(void 0,A)}export{lt as destroy,ct as run};
