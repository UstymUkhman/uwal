import{G as F,C as z,D as v,M as n}from"./index-qOH1w7rj.js";import{S as U,C as G,a as P,b as L}from"./Camera2D-Cw4skKpE.js";var _="@group(0)@binding(1)var<uniform>color: vec4f;@fragment fn fragment()->@location(0)vec4f {return color;}";const j=`${U}

${_}`;class O{#r;#t;#n;#o;#e;constructor(t=16777215,f="Shape"){this.Color=t,this.#r=f}CreateColorBuffer(t,f=this.#r){const{color:l,buffer:i}=t.CreateUniformBuffer("color",{label:`${f} Color Buffer`});this.#t=l,this.#n=t,this.#e=i,this.#t.set(this.#o),t.WriteBuffer(i,l)}get ColorBuffer(){return this.#e}set Color(t){this.#o=typeof t=="number"&&F(t)||t instanceof z&&t.rgba||Object.values(t),this.#t?.fill(1).set(this.#o),this.#n?.WriteBuffer(this.#e,this.#t)}get Color(){return this.#o}Destroy(){this.#n=void 0,this.#e.destroy(),this.#e=void 0}}/**
 * @example 2D Shapes
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This example is developed by using a version listed below.
 * Please note that this code may be simplified in future
 * thanks to more recent library APIs.
 * @version 0.2.0
 * @license MIT
 */let C,r;const h=[];let b;async function W(p){try{r=new(await v.Renderer(p,"2D Shapes"))}catch(s){alert(s)}const t=new G,f=new z(3349069),l=[],i=[],S=[],w=new P,d=new r.Pipeline,x=d.CreateShaderModule(j);r.CreatePassDescriptor(r.CreateColorAttachment(f)),await r.AddPipeline(d,{fragment:d.CreateFragmentState(x),vertex:d.CreateVertexState(x,w.GetPositionBufferLayout(d))}),w.Destroy();function A(){l.splice(0),i.splice(0),h.splice(0),S.splice(0),cancelAnimationFrame(C)}function M(){$(),C=requestAnimationFrame(B)}function R(){return f.rgb=[n.Random(.3),n.Random(.2),n.Random(.4)]}function $(){const[s,u]=r.CanvasSize;for(let e=3;e<=12;e++){const m=e===11&&64||e;for(let o=0;o<2;o++){const a=n.Random(50,100),y=n.Random(.75,.95)*a,g=new P({segments:m,radius:a,innerRadius:y*o}),c=new L(g,new O(R()));c.SetRenderPipeline(d,r.ResolutionBuffer),c.Rotation=n.Random(0,n.TAU),c.Position=[n.Random(a,s-a),n.Random(a,u-a)],i.push(n.Random(1,10)),l.push(n.Random(0,.1)),S.push([n.Random(-1,1),n.Random(-1,1)]),h.push(c)}}}function B(){const[s,u]=r.CanvasSize;for(let e=0,m=h.length;e<m;e++){const o=h[e],a=S[e],[y,g]=o.Position;o.Position=[y+a[0]*i[e],g+a[1]*i[e]],o.Rotation+=l[e],o.UpdateLocalMatrix();const{min:c,max:D}=o.BoundingBox;o.UpdateProjectionMatrix(t.ProjectionMatrix),(c[0]<=0||D[0]>=s)&&(a[0]*=-1,o.Material.Color=R()),(c[1]<=0||D[1]>=u)&&(a[1]*=-1,o.Material.Color=R()),o.SetPipelineData(),r.Render(!1)}r.Submit(),C=requestAnimationFrame(B)}b=new ResizeObserver(s=>{for(const u of s){let{inlineSize:e,blockSize:m}=u.contentBoxSize[0];e=e<=960&&e||e-240,r.SetCanvasSize(e,m),t.Size=r.CanvasSize}A(),M()}),b.observe(document.body)}function k(){h.forEach(p=>p.Destroy()),v.OnLost=()=>{},cancelAnimationFrame(C),b.disconnect(),r.Destroy(),h.splice(0),v.Destroy()}export{k as destroy,W as run};
