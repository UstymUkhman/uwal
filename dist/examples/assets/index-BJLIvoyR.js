import{U as u}from"./index-dsaqnA61.js";import{Q as S}from"./Quad-VFYOTGYq.js";var b="@group(0)@binding(0)var<uniform>resolution: vec2f;fn GetClipSpace(position: vec2f)->vec2f{let clipSpace=position/resolution*2-1;return clipSpace*vec2f(1,-1);}",C="const R=7.0/5.0;const B=8.0/5.0;struct Video{pad: f32,time: f32,size: vec2f};struct VertexOutput{@location(0)coord: vec2f,@builtin(position)position: vec4f};@group(0)@binding(2)var Sampler: sampler;@group(0)@binding(1)var<uniform>video: Video;@group(0)@binding(3)var Texture: texture_external;@vertex fn vertex(@builtin(vertex_index)index: u32)->VertexOutput {var output: VertexOutput;var coord=GetQuadCoord(index);let offset=vec2f(select(1,0.85,resolution.y<=video.size.y));let position=coord*video.size*offset/resolution;output.position=vec4f(position,0,1);coord=(coord+1.0)*0.5;coord.y=1.0-coord.y;output.coord=coord;return output;}@fragment fn fragment(@location(0)coord: vec2f)->@location(0)vec4f {let color=textureSampleBaseClampToEdge(Texture,Sampler,coord);let gradient=vec3f(pow(color.r,R),color.g,pow(color.b,B));let output=mix(color.rgb,gradient,(sin(video.time)+1)/2);return vec4f(output,color.a);}";const y=""+new URL("pomeranian-BxXy5_gQ.mp4",import.meta.url).href;/**
 * @example Video Postprocessing
 * @author Ustym Ukhman <ustym.ukhman@gmail.com>
 * @description This example is developed by using a version listed below.
 * Please note that this code may be simplified in future
 * thanks to more recent library APIs.
 * @version 0.0.6
 * @license MIT
 */let a,s;async function R(l){let e;try{e=new(await u.RenderPipeline(l,"Video Postprocessing"))}catch(o){alert(o)}const d=new(await u.Texture()),m=d.CreateSampler(),t=document.createElement("video");let f,c,i;t.muted=t.loop=!0,t.preload="auto",t.src=y,e.CreatePipeline({module:e.CreateShaderModule([S,b,C])}),e.CreatePassDescriptor(e.CreateColorAttachment());async function v(){await x(),g(),a=requestAnimationFrame(p)}function x(){return new Promise((o,r)=>{if(t.addEventListener("error",r),"requestVideoFrameCallback"in t)t.requestVideoFrameCallback(o);else{const n=()=>t.currentTime?o():requestAnimationFrame(n);n()}t.play().catch(r)})}function g(){i=new Float32Array(4),c=e.CreateBuffer({size:Float32Array.BYTES_PER_ELEMENT*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),i.set([t.videoWidth,t.videoHeight],2)}function p(o){i.set([o*.001],1),a=requestAnimationFrame(p),e.WriteBuffer(c,i);const r=d.ImportExternalTexture(t);e.SetBindGroups(e.CreateBindGroup(e.CreateBindGroupEntries([{buffer:f},{buffer:c},m,r]))),e.Render(6)}s=new ResizeObserver(o=>{for(const r of o){const{inlineSize:n,blockSize:B}=r.contentBoxSize[0];e.SetCanvasSize(n,B),f=e.ResolutionBuffer}cancelAnimationFrame(a),v()}),s.observe(l)}function E(){u.OnDeviceLost=()=>{},cancelAnimationFrame(a),s.disconnect(),u.Destroy()}export{E as destroy,R as run};
